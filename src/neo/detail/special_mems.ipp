// clang-format off
constexpr inline auto U = undeclared;
constexpr inline auto F = defaulted;
constexpr inline auto D = deleted;
constexpr inline auto N = nontrivial;
template <typename T> using CR=const T&;
template<>struct S<U,U,U,U,U,U>{};
template<>struct S<F,U,U,U,U,U>{S()=default;};
template<>struct S<D,U,U,U,U,U>{S()=delete;};
template<>struct S<N,U,U,U,U,U>{S();};
template<>struct S<U,F,U,U,U,U>{~S()=default;};
template<>struct S<F,F,U,U,U,U>{S()=default;~S()=default;};
template<>struct S<D,F,U,U,U,U>{S()=delete;~S()=default;};
template<>struct S<N,F,U,U,U,U>{S();~S()=default;};
template<>struct S<U,D,U,U,U,U>{~S()=delete;};
template<>struct S<F,D,U,U,U,U>{S()=default;~S()=delete;};
template<>struct S<D,D,U,U,U,U>{S()=delete;~S()=delete;};
template<>struct S<N,D,U,U,U,U>{S();~S()=delete;};
template<>struct S<U,N,U,U,U,U>{~S();};
template<>struct S<F,N,U,U,U,U>{S()=default;~S();};
template<>struct S<D,N,U,U,U,U>{S()=delete;~S();};
template<>struct S<N,N,U,U,U,U>{S();~S();};
template<>struct S<U,U,F,U,U,U>{S(CR<S>)=default;};
template<>struct S<F,U,F,U,U,U>{S()=default;S(CR<S>)=default;};
template<>struct S<D,U,F,U,U,U>{S()=delete;S(CR<S>)=default;};
template<>struct S<N,U,F,U,U,U>{S();S(CR<S>)=default;};
template<>struct S<U,F,F,U,U,U>{~S()=default;S(CR<S>)=default;};
template<>struct S<F,F,F,U,U,U>{S()=default;~S()=default;S(CR<S>)=default;};
template<>struct S<D,F,F,U,U,U>{S()=delete;~S()=default;S(CR<S>)=default;};
template<>struct S<N,F,F,U,U,U>{S();~S()=default;S(CR<S>)=default;};
template<>struct S<U,D,F,U,U,U>{~S()=delete;S(CR<S>)=default;};
template<>struct S<F,D,F,U,U,U>{S()=default;~S()=delete;S(CR<S>)=default;};
template<>struct S<D,D,F,U,U,U>{S()=delete;~S()=delete;S(CR<S>)=default;};
template<>struct S<N,D,F,U,U,U>{S();~S()=delete;S(CR<S>)=default;};
template<>struct S<U,N,F,U,U,U>{~S();S(CR<S>)=default;};
template<>struct S<F,N,F,U,U,U>{S()=default;~S();S(CR<S>)=default;};
template<>struct S<D,N,F,U,U,U>{S()=delete;~S();S(CR<S>)=default;};
template<>struct S<N,N,F,U,U,U>{S();~S();S(CR<S>)=default;};
template<>struct S<U,U,D,U,U,U>{S(CR<S>)=delete;};
template<>struct S<F,U,D,U,U,U>{S()=default;S(CR<S>)=delete;};
template<>struct S<D,U,D,U,U,U>{S()=delete;S(CR<S>)=delete;};
template<>struct S<N,U,D,U,U,U>{S();S(CR<S>)=delete;};
template<>struct S<U,F,D,U,U,U>{~S()=default;S(CR<S>)=delete;};
template<>struct S<F,F,D,U,U,U>{S()=default;~S()=default;S(CR<S>)=delete;};
template<>struct S<D,F,D,U,U,U>{S()=delete;~S()=default;S(CR<S>)=delete;};
template<>struct S<N,F,D,U,U,U>{S();~S()=default;S(CR<S>)=delete;};
template<>struct S<U,D,D,U,U,U>{~S()=delete;S(CR<S>)=delete;};
template<>struct S<F,D,D,U,U,U>{S()=default;~S()=delete;S(CR<S>)=delete;};
template<>struct S<D,D,D,U,U,U>{S()=delete;~S()=delete;S(CR<S>)=delete;};
template<>struct S<N,D,D,U,U,U>{S();~S()=delete;S(CR<S>)=delete;};
template<>struct S<U,N,D,U,U,U>{~S();S(CR<S>)=delete;};
template<>struct S<F,N,D,U,U,U>{S()=default;~S();S(CR<S>)=delete;};
template<>struct S<D,N,D,U,U,U>{S()=delete;~S();S(CR<S>)=delete;};
template<>struct S<N,N,D,U,U,U>{S();~S();S(CR<S>)=delete;};
template<>struct S<U,U,N,U,U,U>{S(CR<S>);};
template<>struct S<F,U,N,U,U,U>{S()=default;S(CR<S>);};
template<>struct S<D,U,N,U,U,U>{S()=delete;S(CR<S>);};
template<>struct S<N,U,N,U,U,U>{S();S(CR<S>);};
template<>struct S<U,F,N,U,U,U>{~S()=default;S(CR<S>);};
template<>struct S<F,F,N,U,U,U>{S()=default;~S()=default;S(CR<S>);};
template<>struct S<D,F,N,U,U,U>{S()=delete;~S()=default;S(CR<S>);};
template<>struct S<N,F,N,U,U,U>{S();~S()=default;S(CR<S>);};
template<>struct S<U,D,N,U,U,U>{~S()=delete;S(CR<S>);};
template<>struct S<F,D,N,U,U,U>{S()=default;~S()=delete;S(CR<S>);};
template<>struct S<D,D,N,U,U,U>{S()=delete;~S()=delete;S(CR<S>);};
template<>struct S<N,D,N,U,U,U>{S();~S()=delete;S(CR<S>);};
template<>struct S<U,N,N,U,U,U>{~S();S(CR<S>);};
template<>struct S<F,N,N,U,U,U>{S()=default;~S();S(CR<S>);};
template<>struct S<D,N,N,U,U,U>{S()=delete;~S();S(CR<S>);};
template<>struct S<N,N,N,U,U,U>{S();~S();S(CR<S>);};
template<>struct S<U,U,U,F,U,U>{S(S&&)=default;};
template<>struct S<F,U,U,F,U,U>{S()=default;S(S&&)=default;};
template<>struct S<D,U,U,F,U,U>{S()=delete;S(S&&)=default;};
template<>struct S<N,U,U,F,U,U>{S();S(S&&)=default;};
template<>struct S<U,F,U,F,U,U>{~S()=default;S(S&&)=default;};
template<>struct S<F,F,U,F,U,U>{S()=default;~S()=default;S(S&&)=default;};
template<>struct S<D,F,U,F,U,U>{S()=delete;~S()=default;S(S&&)=default;};
template<>struct S<N,F,U,F,U,U>{S();~S()=default;S(S&&)=default;};
template<>struct S<U,D,U,F,U,U>{~S()=delete;S(S&&)=default;};
template<>struct S<F,D,U,F,U,U>{S()=default;~S()=delete;S(S&&)=default;};
template<>struct S<D,D,U,F,U,U>{S()=delete;~S()=delete;S(S&&)=default;};
template<>struct S<N,D,U,F,U,U>{S();~S()=delete;S(S&&)=default;};
template<>struct S<U,N,U,F,U,U>{~S();S(S&&)=default;};
template<>struct S<F,N,U,F,U,U>{S()=default;~S();S(S&&)=default;};
template<>struct S<D,N,U,F,U,U>{S()=delete;~S();S(S&&)=default;};
template<>struct S<N,N,U,F,U,U>{S();~S();S(S&&)=default;};
template<>struct S<U,U,F,F,U,U>{S(CR<S>)=default;S(S&&)=default;};
template<>struct S<F,U,F,F,U,U>{S()=default;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<D,U,F,F,U,U>{S()=delete;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<N,U,F,F,U,U>{S();S(CR<S>)=default;S(S&&)=default;};
template<>struct S<U,F,F,F,U,U>{~S()=default;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<F,F,F,F,U,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<D,F,F,F,U,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<N,F,F,F,U,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<U,D,F,F,U,U>{~S()=delete;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<F,D,F,F,U,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<D,D,F,F,U,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<N,D,F,F,U,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;};
template<>struct S<U,N,F,F,U,U>{~S();S(CR<S>)=default;S(S&&)=default;};
template<>struct S<F,N,F,F,U,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;};
template<>struct S<D,N,F,F,U,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;};
template<>struct S<N,N,F,F,U,U>{S();~S();S(CR<S>)=default;S(S&&)=default;};
template<>struct S<U,U,D,F,U,U>{S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<F,U,D,F,U,U>{S()=default;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<D,U,D,F,U,U>{S()=delete;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<N,U,D,F,U,U>{S();S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<U,F,D,F,U,U>{~S()=default;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<F,F,D,F,U,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<D,F,D,F,U,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<N,F,D,F,U,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<U,D,D,F,U,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<F,D,D,F,U,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<D,D,D,F,U,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<N,D,D,F,U,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<U,N,D,F,U,U>{~S();S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<F,N,D,F,U,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<D,N,D,F,U,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<N,N,D,F,U,U>{S();~S();S(CR<S>)=delete;S(S&&)=default;};
template<>struct S<U,U,N,F,U,U>{S(CR<S>);S(S&&)=default;};
template<>struct S<F,U,N,F,U,U>{S()=default;S(CR<S>);S(S&&)=default;};
template<>struct S<D,U,N,F,U,U>{S()=delete;S(CR<S>);S(S&&)=default;};
template<>struct S<N,U,N,F,U,U>{S();S(CR<S>);S(S&&)=default;};
template<>struct S<U,F,N,F,U,U>{~S()=default;S(CR<S>);S(S&&)=default;};
template<>struct S<F,F,N,F,U,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;};
template<>struct S<D,F,N,F,U,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;};
template<>struct S<N,F,N,F,U,U>{S();~S()=default;S(CR<S>);S(S&&)=default;};
template<>struct S<U,D,N,F,U,U>{~S()=delete;S(CR<S>);S(S&&)=default;};
template<>struct S<F,D,N,F,U,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;};
template<>struct S<D,D,N,F,U,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;};
template<>struct S<N,D,N,F,U,U>{S();~S()=delete;S(CR<S>);S(S&&)=default;};
template<>struct S<U,N,N,F,U,U>{~S();S(CR<S>);S(S&&)=default;};
template<>struct S<F,N,N,F,U,U>{S()=default;~S();S(CR<S>);S(S&&)=default;};
template<>struct S<D,N,N,F,U,U>{S()=delete;~S();S(CR<S>);S(S&&)=default;};
template<>struct S<N,N,N,F,U,U>{S();~S();S(CR<S>);S(S&&)=default;};
template<>struct S<U,U,U,D,U,U>{S(S&&)=delete;};
template<>struct S<F,U,U,D,U,U>{S()=default;S(S&&)=delete;};
template<>struct S<D,U,U,D,U,U>{S()=delete;S(S&&)=delete;};
template<>struct S<N,U,U,D,U,U>{S();S(S&&)=delete;};
template<>struct S<U,F,U,D,U,U>{~S()=default;S(S&&)=delete;};
template<>struct S<F,F,U,D,U,U>{S()=default;~S()=default;S(S&&)=delete;};
template<>struct S<D,F,U,D,U,U>{S()=delete;~S()=default;S(S&&)=delete;};
template<>struct S<N,F,U,D,U,U>{S();~S()=default;S(S&&)=delete;};
template<>struct S<U,D,U,D,U,U>{~S()=delete;S(S&&)=delete;};
template<>struct S<F,D,U,D,U,U>{S()=default;~S()=delete;S(S&&)=delete;};
template<>struct S<D,D,U,D,U,U>{S()=delete;~S()=delete;S(S&&)=delete;};
template<>struct S<N,D,U,D,U,U>{S();~S()=delete;S(S&&)=delete;};
template<>struct S<U,N,U,D,U,U>{~S();S(S&&)=delete;};
template<>struct S<F,N,U,D,U,U>{S()=default;~S();S(S&&)=delete;};
template<>struct S<D,N,U,D,U,U>{S()=delete;~S();S(S&&)=delete;};
template<>struct S<N,N,U,D,U,U>{S();~S();S(S&&)=delete;};
template<>struct S<U,U,F,D,U,U>{S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<F,U,F,D,U,U>{S()=default;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<D,U,F,D,U,U>{S()=delete;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<N,U,F,D,U,U>{S();S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<U,F,F,D,U,U>{~S()=default;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<F,F,F,D,U,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<D,F,F,D,U,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<N,F,F,D,U,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<U,D,F,D,U,U>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<F,D,F,D,U,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<D,D,F,D,U,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<N,D,F,D,U,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<U,N,F,D,U,U>{~S();S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<F,N,F,D,U,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<D,N,F,D,U,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<N,N,F,D,U,U>{S();~S();S(CR<S>)=default;S(S&&)=delete;};
template<>struct S<U,U,D,D,U,U>{S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<F,U,D,D,U,U>{S()=default;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<D,U,D,D,U,U>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<N,U,D,D,U,U>{S();S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<U,F,D,D,U,U>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<F,F,D,D,U,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<D,F,D,D,U,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<N,F,D,D,U,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<U,D,D,D,U,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<F,D,D,D,U,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<D,D,D,D,U,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<N,D,D,D,U,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<U,N,D,D,U,U>{~S();S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<F,N,D,D,U,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<D,N,D,D,U,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<N,N,D,D,U,U>{S();~S();S(CR<S>)=delete;S(S&&)=delete;};
template<>struct S<U,U,N,D,U,U>{S(CR<S>);S(S&&)=delete;};
template<>struct S<F,U,N,D,U,U>{S()=default;S(CR<S>);S(S&&)=delete;};
template<>struct S<D,U,N,D,U,U>{S()=delete;S(CR<S>);S(S&&)=delete;};
template<>struct S<N,U,N,D,U,U>{S();S(CR<S>);S(S&&)=delete;};
template<>struct S<U,F,N,D,U,U>{~S()=default;S(CR<S>);S(S&&)=delete;};
template<>struct S<F,F,N,D,U,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;};
template<>struct S<D,F,N,D,U,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;};
template<>struct S<N,F,N,D,U,U>{S();~S()=default;S(CR<S>);S(S&&)=delete;};
template<>struct S<U,D,N,D,U,U>{~S()=delete;S(CR<S>);S(S&&)=delete;};
template<>struct S<F,D,N,D,U,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;};
template<>struct S<D,D,N,D,U,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;};
template<>struct S<N,D,N,D,U,U>{S();~S()=delete;S(CR<S>);S(S&&)=delete;};
template<>struct S<U,N,N,D,U,U>{~S();S(CR<S>);S(S&&)=delete;};
template<>struct S<F,N,N,D,U,U>{S()=default;~S();S(CR<S>);S(S&&)=delete;};
template<>struct S<D,N,N,D,U,U>{S()=delete;~S();S(CR<S>);S(S&&)=delete;};
template<>struct S<N,N,N,D,U,U>{S();~S();S(CR<S>);S(S&&)=delete;};
template<>struct S<U,U,U,N,U,U>{S(S&&);};
template<>struct S<F,U,U,N,U,U>{S()=default;S(S&&);};
template<>struct S<D,U,U,N,U,U>{S()=delete;S(S&&);};
template<>struct S<N,U,U,N,U,U>{S();S(S&&);};
template<>struct S<U,F,U,N,U,U>{~S()=default;S(S&&);};
template<>struct S<F,F,U,N,U,U>{S()=default;~S()=default;S(S&&);};
template<>struct S<D,F,U,N,U,U>{S()=delete;~S()=default;S(S&&);};
template<>struct S<N,F,U,N,U,U>{S();~S()=default;S(S&&);};
template<>struct S<U,D,U,N,U,U>{~S()=delete;S(S&&);};
template<>struct S<F,D,U,N,U,U>{S()=default;~S()=delete;S(S&&);};
template<>struct S<D,D,U,N,U,U>{S()=delete;~S()=delete;S(S&&);};
template<>struct S<N,D,U,N,U,U>{S();~S()=delete;S(S&&);};
template<>struct S<U,N,U,N,U,U>{~S();S(S&&);};
template<>struct S<F,N,U,N,U,U>{S()=default;~S();S(S&&);};
template<>struct S<D,N,U,N,U,U>{S()=delete;~S();S(S&&);};
template<>struct S<N,N,U,N,U,U>{S();~S();S(S&&);};
template<>struct S<U,U,F,N,U,U>{S(CR<S>)=default;S(S&&);};
template<>struct S<F,U,F,N,U,U>{S()=default;S(CR<S>)=default;S(S&&);};
template<>struct S<D,U,F,N,U,U>{S()=delete;S(CR<S>)=default;S(S&&);};
template<>struct S<N,U,F,N,U,U>{S();S(CR<S>)=default;S(S&&);};
template<>struct S<U,F,F,N,U,U>{~S()=default;S(CR<S>)=default;S(S&&);};
template<>struct S<F,F,F,N,U,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);};
template<>struct S<D,F,F,N,U,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);};
template<>struct S<N,F,F,N,U,U>{S();~S()=default;S(CR<S>)=default;S(S&&);};
template<>struct S<U,D,F,N,U,U>{~S()=delete;S(CR<S>)=default;S(S&&);};
template<>struct S<F,D,F,N,U,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);};
template<>struct S<D,D,F,N,U,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);};
template<>struct S<N,D,F,N,U,U>{S();~S()=delete;S(CR<S>)=default;S(S&&);};
template<>struct S<U,N,F,N,U,U>{~S();S(CR<S>)=default;S(S&&);};
template<>struct S<F,N,F,N,U,U>{S()=default;~S();S(CR<S>)=default;S(S&&);};
template<>struct S<D,N,F,N,U,U>{S()=delete;~S();S(CR<S>)=default;S(S&&);};
template<>struct S<N,N,F,N,U,U>{S();~S();S(CR<S>)=default;S(S&&);};
template<>struct S<U,U,D,N,U,U>{S(CR<S>)=delete;S(S&&);};
template<>struct S<F,U,D,N,U,U>{S()=default;S(CR<S>)=delete;S(S&&);};
template<>struct S<D,U,D,N,U,U>{S()=delete;S(CR<S>)=delete;S(S&&);};
template<>struct S<N,U,D,N,U,U>{S();S(CR<S>)=delete;S(S&&);};
template<>struct S<U,F,D,N,U,U>{~S()=default;S(CR<S>)=delete;S(S&&);};
template<>struct S<F,F,D,N,U,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);};
template<>struct S<D,F,D,N,U,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);};
template<>struct S<N,F,D,N,U,U>{S();~S()=default;S(CR<S>)=delete;S(S&&);};
template<>struct S<U,D,D,N,U,U>{~S()=delete;S(CR<S>)=delete;S(S&&);};
template<>struct S<F,D,D,N,U,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);};
template<>struct S<D,D,D,N,U,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);};
template<>struct S<N,D,D,N,U,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&);};
template<>struct S<U,N,D,N,U,U>{~S();S(CR<S>)=delete;S(S&&);};
template<>struct S<F,N,D,N,U,U>{S()=default;~S();S(CR<S>)=delete;S(S&&);};
template<>struct S<D,N,D,N,U,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&);};
template<>struct S<N,N,D,N,U,U>{S();~S();S(CR<S>)=delete;S(S&&);};
template<>struct S<U,U,N,N,U,U>{S(CR<S>);S(S&&);};
template<>struct S<F,U,N,N,U,U>{S()=default;S(CR<S>);S(S&&);};
template<>struct S<D,U,N,N,U,U>{S()=delete;S(CR<S>);S(S&&);};
template<>struct S<N,U,N,N,U,U>{S();S(CR<S>);S(S&&);};
template<>struct S<U,F,N,N,U,U>{~S()=default;S(CR<S>);S(S&&);};
template<>struct S<F,F,N,N,U,U>{S()=default;~S()=default;S(CR<S>);S(S&&);};
template<>struct S<D,F,N,N,U,U>{S()=delete;~S()=default;S(CR<S>);S(S&&);};
template<>struct S<N,F,N,N,U,U>{S();~S()=default;S(CR<S>);S(S&&);};
template<>struct S<U,D,N,N,U,U>{~S()=delete;S(CR<S>);S(S&&);};
template<>struct S<F,D,N,N,U,U>{S()=default;~S()=delete;S(CR<S>);S(S&&);};
template<>struct S<D,D,N,N,U,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&);};
template<>struct S<N,D,N,N,U,U>{S();~S()=delete;S(CR<S>);S(S&&);};
template<>struct S<U,N,N,N,U,U>{~S();S(CR<S>);S(S&&);};
template<>struct S<F,N,N,N,U,U>{S()=default;~S();S(CR<S>);S(S&&);};
template<>struct S<D,N,N,N,U,U>{S()=delete;~S();S(CR<S>);S(S&&);};
template<>struct S<N,N,N,N,U,U>{S();~S();S(CR<S>);S(S&&);};
template<>struct S<U,U,U,U,F,U>{S&operator=(const S&)& =default;};
template<>struct S<F,U,U,U,F,U>{S()=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,U,U,F,U>{S()=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,U,U,F,U>{S();S&operator=(const S&)& =default;};
template<>struct S<U,F,U,U,F,U>{~S()=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,U,U,F,U>{S()=default;~S()=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,U,U,F,U>{S()=delete;~S()=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,U,U,F,U>{S();~S()=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,U,U,F,U>{~S()=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,U,U,F,U>{S()=default;~S()=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,U,U,F,U>{S()=delete;~S()=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,U,U,F,U>{S();~S()=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,U,U,F,U>{~S();S&operator=(const S&)& =default;};
template<>struct S<F,N,U,U,F,U>{S()=default;~S();S&operator=(const S&)& =default;};
template<>struct S<D,N,U,U,F,U>{S()=delete;~S();S&operator=(const S&)& =default;};
template<>struct S<N,N,U,U,F,U>{S();~S();S&operator=(const S&)& =default;};
template<>struct S<U,U,F,U,F,U>{S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<F,U,F,U,F,U>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,F,U,F,U>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<N,U,F,U,F,U>{S();S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<U,F,F,U,F,U>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,F,U,F,U>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,F,U,F,U>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,F,U,F,U>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,F,U,F,U>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<F,D,F,U,F,U>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<D,D,F,U,F,U>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<N,D,F,U,F,U>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<U,N,F,U,F,U>{~S();S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<F,N,F,U,F,U>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<D,N,F,U,F,U>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<N,N,F,U,F,U>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =default;};
template<>struct S<U,U,D,U,F,U>{S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,U,D,U,F,U>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,U,D,U,F,U>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,D,U,F,U>{S();S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,F,D,U,F,U>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,F,D,U,F,U>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,F,D,U,F,U>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,F,D,U,F,U>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,D,D,U,F,U>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,D,U,F,U>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,D,U,F,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,D,U,F,U>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,D,U,F,U>{~S();S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,N,D,U,F,U>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,N,D,U,F,U>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,N,D,U,F,U>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,U,N,U,F,U>{S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<F,U,N,U,F,U>{S()=default;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<D,U,N,U,F,U>{S()=delete;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<N,U,N,U,F,U>{S();S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<U,F,N,U,F,U>{~S()=default;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<F,F,N,U,F,U>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<D,F,N,U,F,U>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<N,F,N,U,F,U>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<U,D,N,U,F,U>{~S()=delete;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<F,D,N,U,F,U>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<D,D,N,U,F,U>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<N,D,N,U,F,U>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<U,N,N,U,F,U>{~S();S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<F,N,N,U,F,U>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<D,N,N,U,F,U>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<N,N,N,U,F,U>{S();~S();S(CR<S>);S&operator=(const S&)& =default;};
template<>struct S<U,U,U,F,F,U>{S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,U,U,F,F,U>{S()=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,U,F,F,U>{S()=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,U,U,F,F,U>{S();S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,F,U,F,F,U>{~S()=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,U,F,F,U>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,U,F,F,U>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,U,F,F,U>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,U,F,F,U>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,D,U,F,F,U>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,D,U,F,F,U>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,D,U,F,F,U>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,N,U,F,F,U>{~S();S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,N,U,F,F,U>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,N,U,F,F,U>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,N,U,F,F,U>{S();~S();S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,U,F,F,F,U>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,U,F,F,F,U>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,F,F,F,U>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,U,F,F,F,U>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,F,F,F,F,U>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,F,F,F,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,F,F,F,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,F,F,F,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,F,F,F,U>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,D,F,F,F,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,D,F,F,F,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,D,F,F,F,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,N,F,F,F,U>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,N,F,F,F,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,N,F,F,F,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,N,F,F,F,U>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,U,D,F,F,U>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,U,D,F,F,U>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,D,F,F,U>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,U,D,F,F,U>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,F,D,F,F,U>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,D,F,F,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,D,F,F,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,D,F,F,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,D,F,F,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,D,D,F,F,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,D,D,F,F,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,D,D,F,F,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,N,D,F,F,U>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,N,D,F,F,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,N,D,F,F,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,N,D,F,F,U>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,U,N,F,F,U>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,U,N,F,F,U>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,U,N,F,F,U>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,U,N,F,F,U>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,F,N,F,F,U>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,F,N,F,F,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,F,N,F,F,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,F,N,F,F,U>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,D,N,F,F,U>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,D,N,F,F,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,D,N,F,F,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,D,N,F,F,U>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,N,N,F,F,U>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<F,N,N,F,F,U>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<D,N,N,F,F,U>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<N,N,N,F,F,U>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;};
template<>struct S<U,U,U,D,F,U>{S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,U,U,D,F,U>{S()=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,U,U,D,F,U>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,U,D,F,U>{S();S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,F,U,D,F,U>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,F,U,D,F,U>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,F,U,D,F,U>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,F,U,D,F,U>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,D,U,D,F,U>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,U,D,F,U>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,U,D,F,U>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,U,D,F,U>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,U,D,F,U>{~S();S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,N,U,D,F,U>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,N,U,D,F,U>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,N,U,D,F,U>{S();~S();S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,U,F,D,F,U>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,U,F,D,F,U>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,U,F,D,F,U>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,F,D,F,U>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,F,F,D,F,U>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,F,F,D,F,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,F,F,D,F,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,F,F,D,F,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,D,F,D,F,U>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,F,D,F,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,F,D,F,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,F,D,F,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,F,D,F,U>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,N,F,D,F,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,N,F,D,F,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,N,F,D,F,U>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,U,D,D,F,U>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,U,D,D,F,U>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,U,D,D,F,U>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,D,D,F,U>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,F,D,D,F,U>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,F,D,D,F,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,F,D,D,F,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,F,D,D,F,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,D,D,D,F,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,D,D,F,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,D,D,F,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,D,D,F,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,D,D,F,U>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,N,D,D,F,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,N,D,D,F,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,N,D,D,F,U>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,U,N,D,F,U>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,U,N,D,F,U>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,U,N,D,F,U>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,U,N,D,F,U>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,F,N,D,F,U>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,F,N,D,F,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,F,N,D,F,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,F,N,D,F,U>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,D,N,D,F,U>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,D,N,D,F,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,D,N,D,F,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,D,N,D,F,U>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,N,N,D,F,U>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<F,N,N,D,F,U>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<D,N,N,D,F,U>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<N,N,N,D,F,U>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;};
template<>struct S<U,U,U,N,F,U>{S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,U,U,N,F,U>{S()=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,U,U,N,F,U>{S()=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,U,U,N,F,U>{S();S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,F,U,N,F,U>{~S()=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,F,U,N,F,U>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,F,U,N,F,U>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,F,U,N,F,U>{S();~S()=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,D,U,N,F,U>{~S()=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,D,U,N,F,U>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,D,U,N,F,U>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,D,U,N,F,U>{S();~S()=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,N,U,N,F,U>{~S();S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,N,U,N,F,U>{S()=default;~S();S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,N,U,N,F,U>{S()=delete;~S();S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,N,U,N,F,U>{S();~S();S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,U,F,N,F,U>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,U,F,N,F,U>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,U,F,N,F,U>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,U,F,N,F,U>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,F,F,N,F,U>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,F,F,N,F,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,F,F,N,F,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,F,F,N,F,U>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,D,F,N,F,U>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,D,F,N,F,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,D,F,N,F,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,D,F,N,F,U>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,N,F,N,F,U>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,N,F,N,F,U>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,N,F,N,F,U>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,N,F,N,F,U>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,U,D,N,F,U>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,U,D,N,F,U>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,U,D,N,F,U>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,U,D,N,F,U>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,F,D,N,F,U>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,F,D,N,F,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,F,D,N,F,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,F,D,N,F,U>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,D,D,N,F,U>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,D,D,N,F,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,D,D,N,F,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,D,D,N,F,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,N,D,N,F,U>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,N,D,N,F,U>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,N,D,N,F,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,N,D,N,F,U>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,U,N,N,F,U>{S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,U,N,N,F,U>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,U,N,N,F,U>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,U,N,N,F,U>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,F,N,N,F,U>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,F,N,N,F,U>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,F,N,N,F,U>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,F,N,N,F,U>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,D,N,N,F,U>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,D,N,N,F,U>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,D,N,N,F,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,D,N,N,F,U>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,N,N,N,F,U>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<F,N,N,N,F,U>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<D,N,N,N,F,U>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<N,N,N,N,F,U>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;};
template<>struct S<U,U,U,U,D,U>{S&operator=(const S&)& =delete;};
template<>struct S<F,U,U,U,D,U>{S()=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,U,U,D,U>{S()=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,U,U,D,U>{S();S&operator=(const S&)& =delete;};
template<>struct S<U,F,U,U,D,U>{~S()=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,U,U,D,U>{S()=default;~S()=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,U,U,D,U>{S()=delete;~S()=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,U,U,D,U>{S();~S()=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,U,U,D,U>{~S()=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,U,U,D,U>{S()=default;~S()=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,U,U,D,U>{S()=delete;~S()=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,U,U,D,U>{S();~S()=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,U,U,D,U>{~S();S&operator=(const S&)& =delete;};
template<>struct S<F,N,U,U,D,U>{S()=default;~S();S&operator=(const S&)& =delete;};
template<>struct S<D,N,U,U,D,U>{S()=delete;~S();S&operator=(const S&)& =delete;};
template<>struct S<N,N,U,U,D,U>{S();~S();S&operator=(const S&)& =delete;};
template<>struct S<U,U,F,U,D,U>{S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,U,F,U,D,U>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,F,U,D,U>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,U,F,U,D,U>{S();S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,F,F,U,D,U>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,F,U,D,U>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,F,U,D,U>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,F,U,D,U>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,F,U,D,U>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,D,F,U,D,U>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,D,F,U,D,U>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,D,F,U,D,U>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,N,F,U,D,U>{~S();S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,N,F,U,D,U>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,N,F,U,D,U>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,N,F,U,D,U>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,U,D,U,D,U>{S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,U,D,U,D,U>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,U,D,U,D,U>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,D,U,D,U>{S();S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,F,D,U,D,U>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,F,D,U,D,U>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,F,D,U,D,U>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,F,D,U,D,U>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,D,D,U,D,U>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,D,U,D,U>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,D,U,D,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,D,U,D,U>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,D,U,D,U>{~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,N,D,U,D,U>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,N,D,U,D,U>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,N,D,U,D,U>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,U,N,U,D,U>{S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<F,U,N,U,D,U>{S()=default;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<D,U,N,U,D,U>{S()=delete;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<N,U,N,U,D,U>{S();S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<U,F,N,U,D,U>{~S()=default;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<F,F,N,U,D,U>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<D,F,N,U,D,U>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<N,F,N,U,D,U>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<U,D,N,U,D,U>{~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<F,D,N,U,D,U>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<D,D,N,U,D,U>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<N,D,N,U,D,U>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<U,N,N,U,D,U>{~S();S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<F,N,N,U,D,U>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<D,N,N,U,D,U>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<N,N,N,U,D,U>{S();~S();S(CR<S>);S&operator=(const S&)& =delete;};
template<>struct S<U,U,U,F,D,U>{S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,U,U,F,D,U>{S()=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,U,F,D,U>{S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,U,U,F,D,U>{S();S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,F,U,F,D,U>{~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,U,F,D,U>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,U,F,D,U>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,U,F,D,U>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,U,F,D,U>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,D,U,F,D,U>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,D,U,F,D,U>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,D,U,F,D,U>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,N,U,F,D,U>{~S();S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,N,U,F,D,U>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,N,U,F,D,U>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,N,U,F,D,U>{S();~S();S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,U,F,F,D,U>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,U,F,F,D,U>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,F,F,D,U>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,U,F,F,D,U>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,F,F,F,D,U>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,F,F,D,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,F,F,D,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,F,F,D,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,F,F,D,U>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,D,F,F,D,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,D,F,F,D,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,D,F,F,D,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,N,F,F,D,U>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,N,F,F,D,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,N,F,F,D,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,N,F,F,D,U>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,U,D,F,D,U>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,U,D,F,D,U>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,D,F,D,U>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,U,D,F,D,U>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,F,D,F,D,U>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,D,F,D,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,D,F,D,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,D,F,D,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,D,F,D,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,D,D,F,D,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,D,D,F,D,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,D,D,F,D,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,N,D,F,D,U>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,N,D,F,D,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,N,D,F,D,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,N,D,F,D,U>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,U,N,F,D,U>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,U,N,F,D,U>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,U,N,F,D,U>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,U,N,F,D,U>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,F,N,F,D,U>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,F,N,F,D,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,F,N,F,D,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,F,N,F,D,U>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,D,N,F,D,U>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,D,N,F,D,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,D,N,F,D,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,D,N,F,D,U>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,N,N,F,D,U>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<F,N,N,F,D,U>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<D,N,N,F,D,U>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<N,N,N,F,D,U>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;};
template<>struct S<U,U,U,D,D,U>{S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,U,U,D,D,U>{S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,U,U,D,D,U>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,U,D,D,U>{S();S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,F,U,D,D,U>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,F,U,D,D,U>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,F,U,D,D,U>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,F,U,D,D,U>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,D,U,D,D,U>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,U,D,D,U>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,U,D,D,U>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,U,D,D,U>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,U,D,D,U>{~S();S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,N,U,D,D,U>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,N,U,D,D,U>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,N,U,D,D,U>{S();~S();S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,U,F,D,D,U>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,U,F,D,D,U>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,U,F,D,D,U>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,F,D,D,U>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,F,F,D,D,U>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,F,F,D,D,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,F,F,D,D,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,F,F,D,D,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,D,F,D,D,U>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,F,D,D,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,F,D,D,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,F,D,D,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,F,D,D,U>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,N,F,D,D,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,N,F,D,D,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,N,F,D,D,U>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,U,D,D,D,U>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,U,D,D,D,U>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,U,D,D,D,U>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,D,D,D,U>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,F,D,D,D,U>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,F,D,D,D,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,F,D,D,D,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,F,D,D,D,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,D,D,D,D,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,D,D,D,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,D,D,D,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,D,D,D,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,D,D,D,U>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,N,D,D,D,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,N,D,D,D,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,N,D,D,D,U>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,U,N,D,D,U>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,U,N,D,D,U>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,U,N,D,D,U>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,U,N,D,D,U>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,F,N,D,D,U>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,F,N,D,D,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,F,N,D,D,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,F,N,D,D,U>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,D,N,D,D,U>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,D,N,D,D,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,D,N,D,D,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,D,N,D,D,U>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,N,N,D,D,U>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<F,N,N,D,D,U>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<D,N,N,D,D,U>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<N,N,N,D,D,U>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;};
template<>struct S<U,U,U,N,D,U>{S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,U,U,N,D,U>{S()=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,U,U,N,D,U>{S()=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,U,U,N,D,U>{S();S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,F,U,N,D,U>{~S()=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,F,U,N,D,U>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,F,U,N,D,U>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,F,U,N,D,U>{S();~S()=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,D,U,N,D,U>{~S()=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,D,U,N,D,U>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,D,U,N,D,U>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,D,U,N,D,U>{S();~S()=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,N,U,N,D,U>{~S();S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,N,U,N,D,U>{S()=default;~S();S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,N,U,N,D,U>{S()=delete;~S();S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,N,U,N,D,U>{S();~S();S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,U,F,N,D,U>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,U,F,N,D,U>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,U,F,N,D,U>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,U,F,N,D,U>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,F,F,N,D,U>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,F,F,N,D,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,F,F,N,D,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,F,F,N,D,U>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,D,F,N,D,U>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,D,F,N,D,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,D,F,N,D,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,D,F,N,D,U>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,N,F,N,D,U>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,N,F,N,D,U>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,N,F,N,D,U>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,N,F,N,D,U>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,U,D,N,D,U>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,U,D,N,D,U>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,U,D,N,D,U>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,U,D,N,D,U>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,F,D,N,D,U>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,F,D,N,D,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,F,D,N,D,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,F,D,N,D,U>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,D,D,N,D,U>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,D,D,N,D,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,D,D,N,D,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,D,D,N,D,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,N,D,N,D,U>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,N,D,N,D,U>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,N,D,N,D,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,N,D,N,D,U>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,U,N,N,D,U>{S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,U,N,N,D,U>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,U,N,N,D,U>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,U,N,N,D,U>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,F,N,N,D,U>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,F,N,N,D,U>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,F,N,N,D,U>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,F,N,N,D,U>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,D,N,N,D,U>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,D,N,N,D,U>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,D,N,N,D,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,D,N,N,D,U>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,N,N,N,D,U>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<F,N,N,N,D,U>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<D,N,N,N,D,U>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<N,N,N,N,D,U>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;};
template<>struct S<U,U,U,U,N,U>{S&operator=(const S&)&;};
template<>struct S<F,U,U,U,N,U>{S()=default;S&operator=(const S&)&;};
template<>struct S<D,U,U,U,N,U>{S()=delete;S&operator=(const S&)&;};
template<>struct S<N,U,U,U,N,U>{S();S&operator=(const S&)&;};
template<>struct S<U,F,U,U,N,U>{~S()=default;S&operator=(const S&)&;};
template<>struct S<F,F,U,U,N,U>{S()=default;~S()=default;S&operator=(const S&)&;};
template<>struct S<D,F,U,U,N,U>{S()=delete;~S()=default;S&operator=(const S&)&;};
template<>struct S<N,F,U,U,N,U>{S();~S()=default;S&operator=(const S&)&;};
template<>struct S<U,D,U,U,N,U>{~S()=delete;S&operator=(const S&)&;};
template<>struct S<F,D,U,U,N,U>{S()=default;~S()=delete;S&operator=(const S&)&;};
template<>struct S<D,D,U,U,N,U>{S()=delete;~S()=delete;S&operator=(const S&)&;};
template<>struct S<N,D,U,U,N,U>{S();~S()=delete;S&operator=(const S&)&;};
template<>struct S<U,N,U,U,N,U>{~S();S&operator=(const S&)&;};
template<>struct S<F,N,U,U,N,U>{S()=default;~S();S&operator=(const S&)&;};
template<>struct S<D,N,U,U,N,U>{S()=delete;~S();S&operator=(const S&)&;};
template<>struct S<N,N,U,U,N,U>{S();~S();S&operator=(const S&)&;};
template<>struct S<U,U,F,U,N,U>{S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<F,U,F,U,N,U>{S()=default;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<D,U,F,U,N,U>{S()=delete;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<N,U,F,U,N,U>{S();S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<U,F,F,U,N,U>{~S()=default;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<F,F,F,U,N,U>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<D,F,F,U,N,U>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<N,F,F,U,N,U>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<U,D,F,U,N,U>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<F,D,F,U,N,U>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<D,D,F,U,N,U>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<N,D,F,U,N,U>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<U,N,F,U,N,U>{~S();S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<F,N,F,U,N,U>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<D,N,F,U,N,U>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<N,N,F,U,N,U>{S();~S();S(CR<S>)=default;S&operator=(const S&)&;};
template<>struct S<U,U,D,U,N,U>{S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<F,U,D,U,N,U>{S()=default;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<D,U,D,U,N,U>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<N,U,D,U,N,U>{S();S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<U,F,D,U,N,U>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<F,F,D,U,N,U>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<D,F,D,U,N,U>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<N,F,D,U,N,U>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<U,D,D,U,N,U>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<F,D,D,U,N,U>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<D,D,D,U,N,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<N,D,D,U,N,U>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<U,N,D,U,N,U>{~S();S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<F,N,D,U,N,U>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<D,N,D,U,N,U>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<N,N,D,U,N,U>{S();~S();S(CR<S>)=delete;S&operator=(const S&)&;};
template<>struct S<U,U,N,U,N,U>{S(CR<S>);S&operator=(const S&)&;};
template<>struct S<F,U,N,U,N,U>{S()=default;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<D,U,N,U,N,U>{S()=delete;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<N,U,N,U,N,U>{S();S(CR<S>);S&operator=(const S&)&;};
template<>struct S<U,F,N,U,N,U>{~S()=default;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<F,F,N,U,N,U>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<D,F,N,U,N,U>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<N,F,N,U,N,U>{S();~S()=default;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<U,D,N,U,N,U>{~S()=delete;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<F,D,N,U,N,U>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<D,D,N,U,N,U>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<N,D,N,U,N,U>{S();~S()=delete;S(CR<S>);S&operator=(const S&)&;};
template<>struct S<U,N,N,U,N,U>{~S();S(CR<S>);S&operator=(const S&)&;};
template<>struct S<F,N,N,U,N,U>{S()=default;~S();S(CR<S>);S&operator=(const S&)&;};
template<>struct S<D,N,N,U,N,U>{S()=delete;~S();S(CR<S>);S&operator=(const S&)&;};
template<>struct S<N,N,N,U,N,U>{S();~S();S(CR<S>);S&operator=(const S&)&;};
template<>struct S<U,U,U,F,N,U>{S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,U,U,F,N,U>{S()=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,U,U,F,N,U>{S()=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,U,U,F,N,U>{S();S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,F,U,F,N,U>{~S()=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,F,U,F,N,U>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,F,U,F,N,U>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,F,U,F,N,U>{S();~S()=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,D,U,F,N,U>{~S()=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,D,U,F,N,U>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,D,U,F,N,U>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,D,U,F,N,U>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,N,U,F,N,U>{~S();S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,N,U,F,N,U>{S()=default;~S();S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,N,U,F,N,U>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,N,U,F,N,U>{S();~S();S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,U,F,F,N,U>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,U,F,F,N,U>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,U,F,F,N,U>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,U,F,F,N,U>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,F,F,F,N,U>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,F,F,F,N,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,F,F,F,N,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,F,F,F,N,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,D,F,F,N,U>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,D,F,F,N,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,D,F,F,N,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,D,F,F,N,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,N,F,F,N,U>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,N,F,F,N,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,N,F,F,N,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,N,F,F,N,U>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,U,D,F,N,U>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,U,D,F,N,U>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,U,D,F,N,U>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,U,D,F,N,U>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,F,D,F,N,U>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,F,D,F,N,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,F,D,F,N,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,F,D,F,N,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,D,D,F,N,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,D,D,F,N,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,D,D,F,N,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,D,D,F,N,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,N,D,F,N,U>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,N,D,F,N,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,N,D,F,N,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,N,D,F,N,U>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,U,N,F,N,U>{S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,U,N,F,N,U>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,U,N,F,N,U>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,U,N,F,N,U>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,F,N,F,N,U>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,F,N,F,N,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,F,N,F,N,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,F,N,F,N,U>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,D,N,F,N,U>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,D,N,F,N,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,D,N,F,N,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,D,N,F,N,U>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,N,N,F,N,U>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<F,N,N,F,N,U>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<D,N,N,F,N,U>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<N,N,N,F,N,U>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;};
template<>struct S<U,U,U,D,N,U>{S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,U,U,D,N,U>{S()=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,U,U,D,N,U>{S()=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,U,U,D,N,U>{S();S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,F,U,D,N,U>{~S()=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,F,U,D,N,U>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,F,U,D,N,U>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,F,U,D,N,U>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,D,U,D,N,U>{~S()=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,D,U,D,N,U>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,D,U,D,N,U>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,D,U,D,N,U>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,N,U,D,N,U>{~S();S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,N,U,D,N,U>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,N,U,D,N,U>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,N,U,D,N,U>{S();~S();S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,U,F,D,N,U>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,U,F,D,N,U>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,U,F,D,N,U>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,U,F,D,N,U>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,F,F,D,N,U>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,F,F,D,N,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,F,F,D,N,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,F,F,D,N,U>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,D,F,D,N,U>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,D,F,D,N,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,D,F,D,N,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,D,F,D,N,U>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,N,F,D,N,U>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,N,F,D,N,U>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,N,F,D,N,U>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,N,F,D,N,U>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,U,D,D,N,U>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,U,D,D,N,U>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,U,D,D,N,U>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,U,D,D,N,U>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,F,D,D,N,U>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,F,D,D,N,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,F,D,D,N,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,F,D,D,N,U>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,D,D,D,N,U>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,D,D,D,N,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,D,D,D,N,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,D,D,D,N,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,N,D,D,N,U>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,N,D,D,N,U>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,N,D,D,N,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,N,D,D,N,U>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,U,N,D,N,U>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,U,N,D,N,U>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,U,N,D,N,U>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,U,N,D,N,U>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,F,N,D,N,U>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,F,N,D,N,U>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,F,N,D,N,U>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,F,N,D,N,U>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,D,N,D,N,U>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,D,N,D,N,U>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,D,N,D,N,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,D,N,D,N,U>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,N,N,D,N,U>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<F,N,N,D,N,U>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<D,N,N,D,N,U>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<N,N,N,D,N,U>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;};
template<>struct S<U,U,U,N,N,U>{S(S&&);S&operator=(const S&)&;};
template<>struct S<F,U,U,N,N,U>{S()=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,U,U,N,N,U>{S()=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,U,U,N,N,U>{S();S(S&&);S&operator=(const S&)&;};
template<>struct S<U,F,U,N,N,U>{~S()=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,F,U,N,N,U>{S()=default;~S()=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,F,U,N,N,U>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,F,U,N,N,U>{S();~S()=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,D,U,N,N,U>{~S()=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,D,U,N,N,U>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,D,U,N,N,U>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,D,U,N,N,U>{S();~S()=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,N,U,N,N,U>{~S();S(S&&);S&operator=(const S&)&;};
template<>struct S<F,N,U,N,N,U>{S()=default;~S();S(S&&);S&operator=(const S&)&;};
template<>struct S<D,N,U,N,N,U>{S()=delete;~S();S(S&&);S&operator=(const S&)&;};
template<>struct S<N,N,U,N,N,U>{S();~S();S(S&&);S&operator=(const S&)&;};
template<>struct S<U,U,F,N,N,U>{S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,U,F,N,N,U>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,U,F,N,N,U>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,U,F,N,N,U>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,F,F,N,N,U>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,F,F,N,N,U>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,F,F,N,N,U>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,F,F,N,N,U>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,D,F,N,N,U>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,D,F,N,N,U>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,D,F,N,N,U>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,D,F,N,N,U>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,N,F,N,N,U>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,N,F,N,N,U>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,N,F,N,N,U>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,N,F,N,N,U>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,U,D,N,N,U>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,U,D,N,N,U>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,U,D,N,N,U>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,U,D,N,N,U>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,F,D,N,N,U>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,F,D,N,N,U>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,F,D,N,N,U>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,F,D,N,N,U>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,D,D,N,N,U>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,D,D,N,N,U>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,D,D,N,N,U>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,D,D,N,N,U>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,N,D,N,N,U>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<F,N,D,N,N,U>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<D,N,D,N,N,U>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<N,N,D,N,N,U>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;};
template<>struct S<U,U,N,N,N,U>{S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<F,U,N,N,N,U>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<D,U,N,N,N,U>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<N,U,N,N,N,U>{S();S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<U,F,N,N,N,U>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<F,F,N,N,N,U>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<D,F,N,N,N,U>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<N,F,N,N,N,U>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<U,D,N,N,N,U>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<F,D,N,N,N,U>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<D,D,N,N,N,U>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<N,D,N,N,N,U>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<U,N,N,N,N,U>{~S();S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<F,N,N,N,N,U>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<D,N,N,N,N,U>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<N,N,N,N,N,U>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)&;};
template<>struct S<U,U,U,U,U,F>{S&operator=(S&&)& =default;};
template<>struct S<F,U,U,U,U,F>{S()=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,U,U,F>{S()=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,U,U,F>{S();S&operator=(S&&)& =default;};
template<>struct S<U,F,U,U,U,F>{~S()=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,U,U,F>{S()=default;~S()=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,U,U,F>{S()=delete;~S()=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,U,U,F>{S();~S()=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,U,U,F>{~S()=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,U,U,F>{S()=default;~S()=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,U,U,F>{S()=delete;~S()=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,U,U,F>{S();~S()=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,U,U,F>{~S();S&operator=(S&&)& =default;};
template<>struct S<F,N,U,U,U,F>{S()=default;~S();S&operator=(S&&)& =default;};
template<>struct S<D,N,U,U,U,F>{S()=delete;~S();S&operator=(S&&)& =default;};
template<>struct S<N,N,U,U,U,F>{S();~S();S&operator=(S&&)& =default;};
template<>struct S<U,U,F,U,U,F>{S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,U,U,F>{S()=default;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,U,U,F>{S()=delete;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,U,U,F>{S();S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,U,U,F>{~S()=default;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,U,U,F>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,U,U,F>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,U,U,F>{S();~S()=default;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,U,U,F>{~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,U,U,F>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,U,U,F>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,U,U,F>{S();~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,U,U,F>{~S();S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,U,U,F>{S()=default;~S();S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,U,U,F>{S()=delete;~S();S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,U,U,F>{S();~S();S(CR<S>)=default;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,U,U,F>{S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,U,U,F>{S()=default;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,U,U,F>{S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,U,U,F>{S();S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,U,U,F>{~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,U,U,F>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,U,U,F>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,U,U,F>{S();~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,U,U,F>{~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,U,U,F>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,U,U,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,U,U,F>{S();~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,U,U,F>{~S();S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,U,U,F>{S()=default;~S();S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,U,U,F>{S()=delete;~S();S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,U,U,F>{S();~S();S(CR<S>)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,U,U,F>{S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<F,U,N,U,U,F>{S()=default;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<D,U,N,U,U,F>{S()=delete;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<N,U,N,U,U,F>{S();S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<U,F,N,U,U,F>{~S()=default;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<F,F,N,U,U,F>{S()=default;~S()=default;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<D,F,N,U,U,F>{S()=delete;~S()=default;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<N,F,N,U,U,F>{S();~S()=default;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<U,D,N,U,U,F>{~S()=delete;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<F,D,N,U,U,F>{S()=default;~S()=delete;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<D,D,N,U,U,F>{S()=delete;~S()=delete;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<N,D,N,U,U,F>{S();~S()=delete;S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<U,N,N,U,U,F>{~S();S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<F,N,N,U,U,F>{S()=default;~S();S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<D,N,N,U,U,F>{S()=delete;~S();S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<N,N,N,U,U,F>{S();~S();S(CR<S>);S&operator=(S&&)& =default;};
template<>struct S<U,U,U,F,U,F>{S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,F,U,F>{S()=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,F,U,F>{S()=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,F,U,F>{S();S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,F,U,F>{~S()=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,F,U,F>{S()=default;~S()=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,F,U,F>{S()=delete;~S()=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,F,U,F>{S();~S()=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,F,U,F>{~S()=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,F,U,F>{S()=default;~S()=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,F,U,F>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,F,U,F>{S();~S()=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,F,U,F>{~S();S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,F,U,F>{S()=default;~S();S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,F,U,F>{S()=delete;~S();S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,F,U,F>{S();~S();S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,F,U,F>{S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,F,U,F>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,F,U,F>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,F,U,F>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,F,U,F>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,F,U,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,F,U,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,F,U,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,F,U,F>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,F,U,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,F,U,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,F,U,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,F,U,F>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,F,U,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,F,U,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,F,U,F>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,F,U,F>{S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,F,U,F>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,F,U,F>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,F,U,F>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,F,U,F>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,F,U,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,F,U,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,F,U,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,F,U,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,F,U,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,F,U,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,F,U,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,F,U,F>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,F,U,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,F,U,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,F,U,F>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,F,U,F>{S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,F,U,F>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,F,U,F>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,F,U,F>{S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,F,U,F>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,F,U,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,F,U,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,F,U,F>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,F,U,F>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,F,U,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,F,U,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,F,U,F>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,F,U,F>{~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,F,U,F>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,F,U,F>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,F,U,F>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,D,U,F>{S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,D,U,F>{S()=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,D,U,F>{S()=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,D,U,F>{S();S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,D,U,F>{~S()=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,D,U,F>{S()=default;~S()=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,D,U,F>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,D,U,F>{S();~S()=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,D,U,F>{~S()=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,D,U,F>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,D,U,F>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,D,U,F>{S();~S()=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,D,U,F>{~S();S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,D,U,F>{S()=default;~S();S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,D,U,F>{S()=delete;~S();S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,D,U,F>{S();~S();S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,D,U,F>{S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,D,U,F>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,D,U,F>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,D,U,F>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,D,U,F>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,D,U,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,D,U,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,D,U,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,D,U,F>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,D,U,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,D,U,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,D,U,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,D,U,F>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,D,U,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,D,U,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,D,U,F>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,D,U,F>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,D,U,F>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,D,U,F>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,D,U,F>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,D,U,F>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,D,U,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,D,U,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,D,U,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,D,U,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,D,U,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,D,U,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,D,U,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,D,U,F>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,D,U,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,D,U,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,D,U,F>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,D,U,F>{S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,D,U,F>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,D,U,F>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,D,U,F>{S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,D,U,F>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,D,U,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,D,U,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,D,U,F>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,D,U,F>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,D,U,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,D,U,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,D,U,F>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,D,U,F>{~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,D,U,F>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,D,U,F>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,D,U,F>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,N,U,F>{S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,U,U,N,U,F>{S()=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,U,U,N,U,F>{S()=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,U,U,N,U,F>{S();S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,F,U,N,U,F>{~S()=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,F,U,N,U,F>{S()=default;~S()=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,F,U,N,U,F>{S()=delete;~S()=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,F,U,N,U,F>{S();~S()=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,D,U,N,U,F>{~S()=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,D,U,N,U,F>{S()=default;~S()=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,D,U,N,U,F>{S()=delete;~S()=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,D,U,N,U,F>{S();~S()=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,N,U,N,U,F>{~S();S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,N,U,N,U,F>{S()=default;~S();S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,N,U,N,U,F>{S()=delete;~S();S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,N,U,N,U,F>{S();~S();S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,U,F,N,U,F>{S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,U,F,N,U,F>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,U,F,N,U,F>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,U,F,N,U,F>{S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,F,F,N,U,F>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,F,F,N,U,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,F,F,N,U,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,F,F,N,U,F>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,D,F,N,U,F>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,D,F,N,U,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,D,F,N,U,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,D,F,N,U,F>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,N,F,N,U,F>{~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,N,F,N,U,F>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,N,F,N,U,F>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,N,F,N,U,F>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,U,D,N,U,F>{S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,U,D,N,U,F>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,U,D,N,U,F>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,U,D,N,U,F>{S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,F,D,N,U,F>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,F,D,N,U,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,F,D,N,U,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,F,D,N,U,F>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,D,D,N,U,F>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,D,D,N,U,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,D,D,N,U,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,D,D,N,U,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,N,D,N,U,F>{~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,N,D,N,U,F>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,N,D,N,U,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,N,D,N,U,F>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,U,N,N,U,F>{S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,U,N,N,U,F>{S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,U,N,N,U,F>{S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,U,N,N,U,F>{S();S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,F,N,N,U,F>{~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,F,N,N,U,F>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,F,N,N,U,F>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,F,N,N,U,F>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,D,N,N,U,F>{~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,D,N,N,U,F>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,D,N,N,U,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,D,N,N,U,F>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,N,N,N,U,F>{~S();S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<F,N,N,N,U,F>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<D,N,N,N,U,F>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<N,N,N,N,U,F>{S();~S();S(CR<S>);S(S&&);S&operator=(S&&)& =default;};
template<>struct S<U,U,U,U,F,F>{S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,U,F,F>{S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,U,F,F>{S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,U,F,F>{S();S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,U,F,F>{~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,U,F,F>{S()=default;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,U,F,F>{S()=delete;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,U,F,F>{S();~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,U,F,F>{~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,U,F,F>{S()=default;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,U,F,F>{S()=delete;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,U,F,F>{S();~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,U,F,F>{~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,U,F,F>{S()=default;~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,U,F,F>{S()=delete;~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,U,F,F>{S();~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,U,F,F>{S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,U,F,F>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,U,F,F>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,U,F,F>{S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,U,F,F>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,U,F,F>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,U,F,F>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,U,F,F>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,U,F,F>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,U,F,F>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,U,F,F>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,U,F,F>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,U,F,F>{~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,U,F,F>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,U,F,F>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,U,F,F>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,U,F,F>{S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,U,F,F>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,U,F,F>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,U,F,F>{S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,U,F,F>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,U,F,F>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,U,F,F>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,U,F,F>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,U,F,F>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,U,F,F>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,U,F,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,U,F,F>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,U,F,F>{~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,U,F,F>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,U,F,F>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,U,F,F>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,U,F,F>{S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,U,F,F>{S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,U,F,F>{S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,U,F,F>{S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,U,F,F>{~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,U,F,F>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,U,F,F>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,U,F,F>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,U,F,F>{~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,U,F,F>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,U,F,F>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,U,F,F>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,U,F,F>{~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,U,F,F>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,U,F,F>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,U,F,F>{S();~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,F,F,F>{S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,F,F,F>{S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,F,F,F>{S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,F,F,F>{S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,F,F,F>{~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,F,F,F>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,F,F,F>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,F,F,F>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,F,F,F>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,F,F,F>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,F,F,F>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,F,F,F>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,F,F,F>{~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,F,F,F>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,F,F,F>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,F,F,F>{S();~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,F,F,F>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,F,F,F>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,F,F,F>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,F,F,F>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,F,F,F>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,F,F,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,F,F,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,F,F,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,F,F,F>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,F,F,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,F,F,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,F,F,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,F,F,F>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,F,F,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,F,F,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,F,F,F>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,F,F,F>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,F,F,F>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,F,F,F>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,F,F,F>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,F,F,F>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,F,F,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,F,F,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,F,F,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,F,F,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,F,F,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,F,F,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,F,F,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,F,F,F>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,F,F,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,F,F,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,F,F,F>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,F,F,F>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,F,F,F>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,F,F,F>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,F,F,F>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,F,F,F>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,F,F,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,F,F,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,F,F,F>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,F,F,F>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,F,F,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,F,F,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,F,F,F>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,F,F,F>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,F,F,F>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,F,F,F>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,F,F,F>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,D,F,F>{S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,D,F,F>{S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,D,F,F>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,D,F,F>{S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,D,F,F>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,D,F,F>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,D,F,F>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,D,F,F>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,D,F,F>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,D,F,F>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,D,F,F>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,D,F,F>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,D,F,F>{~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,D,F,F>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,D,F,F>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,D,F,F>{S();~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,D,F,F>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,D,F,F>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,D,F,F>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,D,F,F>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,D,F,F>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,D,F,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,D,F,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,D,F,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,D,F,F>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,D,F,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,D,F,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,D,F,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,D,F,F>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,D,F,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,D,F,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,D,F,F>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,D,F,F>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,D,F,F>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,D,F,F>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,D,F,F>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,D,F,F>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,D,F,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,D,F,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,D,F,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,D,F,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,D,F,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,D,F,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,D,F,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,D,F,F>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,D,F,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,D,F,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,D,F,F>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,D,F,F>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,D,F,F>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,D,F,F>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,D,F,F>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,D,F,F>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,D,F,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,D,F,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,D,F,F>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,D,F,F>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,D,F,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,D,F,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,D,F,F>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,D,F,F>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,D,F,F>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,D,F,F>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,D,F,F>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,N,F,F>{S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,N,F,F>{S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,N,F,F>{S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,N,F,F>{S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,N,F,F>{~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,N,F,F>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,N,F,F>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,N,F,F>{S();~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,N,F,F>{~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,N,F,F>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,N,F,F>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,N,F,F>{S();~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,N,F,F>{~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,N,F,F>{S()=default;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,N,F,F>{S()=delete;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,N,F,F>{S();~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,N,F,F>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,N,F,F>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,N,F,F>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,N,F,F>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,N,F,F>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,N,F,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,N,F,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,N,F,F>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,N,F,F>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,N,F,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,N,F,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,N,F,F>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,N,F,F>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,N,F,F>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,N,F,F>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,N,F,F>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,N,F,F>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,N,F,F>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,N,F,F>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,N,F,F>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,N,F,F>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,N,F,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,N,F,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,N,F,F>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,N,F,F>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,N,F,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,N,F,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,N,F,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,N,F,F>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,N,F,F>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,N,F,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,N,F,F>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,N,F,F>{S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,N,F,F>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,N,F,F>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,N,F,F>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,N,F,F>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,N,F,F>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,N,F,F>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,N,F,F>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,N,F,F>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,N,F,F>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,N,F,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,N,F,F>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,N,F,F>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,N,F,F>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,N,F,F>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,N,F,F>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,U,D,F>{S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,U,D,F>{S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,U,D,F>{S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,U,D,F>{S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,U,D,F>{~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,U,D,F>{S()=default;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,U,D,F>{S()=delete;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,U,D,F>{S();~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,U,D,F>{~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,U,D,F>{S()=default;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,U,D,F>{S()=delete;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,U,D,F>{S();~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,U,D,F>{~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,U,D,F>{S()=default;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,U,D,F>{S()=delete;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,U,D,F>{S();~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,U,D,F>{S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,U,D,F>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,U,D,F>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,U,D,F>{S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,U,D,F>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,U,D,F>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,U,D,F>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,U,D,F>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,U,D,F>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,U,D,F>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,U,D,F>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,U,D,F>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,U,D,F>{~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,U,D,F>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,U,D,F>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,U,D,F>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,U,D,F>{S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,U,D,F>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,U,D,F>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,U,D,F>{S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,U,D,F>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,U,D,F>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,U,D,F>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,U,D,F>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,U,D,F>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,U,D,F>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,U,D,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,U,D,F>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,U,D,F>{~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,U,D,F>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,U,D,F>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,U,D,F>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,U,D,F>{S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,U,D,F>{S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,U,D,F>{S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,U,D,F>{S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,U,D,F>{~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,U,D,F>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,U,D,F>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,U,D,F>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,U,D,F>{~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,U,D,F>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,U,D,F>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,U,D,F>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,U,D,F>{~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,U,D,F>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,U,D,F>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,U,D,F>{S();~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,F,D,F>{S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,F,D,F>{S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,F,D,F>{S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,F,D,F>{S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,F,D,F>{~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,F,D,F>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,F,D,F>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,F,D,F>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,F,D,F>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,F,D,F>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,F,D,F>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,F,D,F>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,F,D,F>{~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,F,D,F>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,F,D,F>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,F,D,F>{S();~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,F,D,F>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,F,D,F>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,F,D,F>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,F,D,F>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,F,D,F>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,F,D,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,F,D,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,F,D,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,F,D,F>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,F,D,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,F,D,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,F,D,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,F,D,F>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,F,D,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,F,D,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,F,D,F>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,F,D,F>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,F,D,F>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,F,D,F>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,F,D,F>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,F,D,F>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,F,D,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,F,D,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,F,D,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,F,D,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,F,D,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,F,D,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,F,D,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,F,D,F>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,F,D,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,F,D,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,F,D,F>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,F,D,F>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,F,D,F>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,F,D,F>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,F,D,F>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,F,D,F>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,F,D,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,F,D,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,F,D,F>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,F,D,F>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,F,D,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,F,D,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,F,D,F>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,F,D,F>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,F,D,F>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,F,D,F>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,F,D,F>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,D,D,F>{S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,D,D,F>{S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,D,D,F>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,D,D,F>{S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,D,D,F>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,D,D,F>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,D,D,F>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,D,D,F>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,D,D,F>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,D,D,F>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,D,D,F>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,D,D,F>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,D,D,F>{~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,D,D,F>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,D,D,F>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,D,D,F>{S();~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,D,D,F>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,D,D,F>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,D,D,F>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,D,D,F>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,D,D,F>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,D,D,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,D,D,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,D,D,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,D,D,F>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,D,D,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,D,D,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,D,D,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,D,D,F>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,D,D,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,D,D,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,D,D,F>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,D,D,F>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,D,D,F>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,D,D,F>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,D,D,F>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,D,D,F>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,D,D,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,D,D,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,D,D,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,D,D,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,D,D,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,D,D,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,D,D,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,D,D,F>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,D,D,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,D,D,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,D,D,F>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,D,D,F>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,D,D,F>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,D,D,F>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,D,D,F>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,D,D,F>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,D,D,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,D,D,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,D,D,F>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,D,D,F>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,D,D,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,D,D,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,D,D,F>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,D,D,F>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,D,D,F>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,D,D,F>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,D,D,F>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,N,D,F>{S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,U,N,D,F>{S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,U,N,D,F>{S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,U,N,D,F>{S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,U,N,D,F>{~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,U,N,D,F>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,U,N,D,F>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,U,N,D,F>{S();~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,U,N,D,F>{~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,U,N,D,F>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,U,N,D,F>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,U,N,D,F>{S();~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,U,N,D,F>{~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,U,N,D,F>{S()=default;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,U,N,D,F>{S()=delete;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,U,N,D,F>{S();~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,F,N,D,F>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,F,N,D,F>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,F,N,D,F>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,F,N,D,F>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,F,N,D,F>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,F,N,D,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,F,N,D,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,F,N,D,F>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,F,N,D,F>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,F,N,D,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,F,N,D,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,F,N,D,F>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,F,N,D,F>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,F,N,D,F>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,F,N,D,F>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,F,N,D,F>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,D,N,D,F>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,D,N,D,F>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,D,N,D,F>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,D,N,D,F>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,D,N,D,F>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,D,N,D,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,D,N,D,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,D,N,D,F>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,D,N,D,F>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,D,N,D,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,D,N,D,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,D,N,D,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,D,N,D,F>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,D,N,D,F>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,D,N,D,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,D,N,D,F>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,N,N,D,F>{S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,U,N,N,D,F>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,U,N,N,D,F>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,U,N,N,D,F>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,F,N,N,D,F>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,F,N,N,D,F>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,F,N,N,D,F>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,F,N,N,D,F>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,D,N,N,D,F>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,D,N,N,D,F>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,D,N,N,D,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,D,N,N,D,F>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,N,N,N,D,F>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<F,N,N,N,D,F>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<D,N,N,N,D,F>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<N,N,N,N,D,F>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =default;};
template<>struct S<U,U,U,U,N,F>{S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,U,N,F>{S()=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,U,N,F>{S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,U,N,F>{S();S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,U,N,F>{~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,U,N,F>{S()=default;~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,U,N,F>{S()=delete;~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,U,N,F>{S();~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,U,N,F>{~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,U,N,F>{S()=default;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,U,N,F>{S()=delete;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,U,N,F>{S();~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,U,N,F>{~S();S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,U,N,F>{S()=default;~S();S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,U,N,F>{S()=delete;~S();S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,U,N,F>{S();~S();S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,U,N,F>{S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,U,N,F>{S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,U,N,F>{S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,U,N,F>{S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,U,N,F>{~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,U,N,F>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,U,N,F>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,U,N,F>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,U,N,F>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,U,N,F>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,U,N,F>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,U,N,F>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,U,N,F>{~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,U,N,F>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,U,N,F>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,U,N,F>{S();~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,U,N,F>{S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,U,N,F>{S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,U,N,F>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,U,N,F>{S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,U,N,F>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,U,N,F>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,U,N,F>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,U,N,F>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,U,N,F>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,U,N,F>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,U,N,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,U,N,F>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,U,N,F>{~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,U,N,F>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,U,N,F>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,U,N,F>{S();~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,U,N,F>{S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,U,N,F>{S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,U,N,F>{S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,U,N,F>{S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,U,N,F>{~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,U,N,F>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,U,N,F>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,U,N,F>{S();~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,U,N,F>{~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,U,N,F>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,U,N,F>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,U,N,F>{S();~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,U,N,F>{~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,U,N,F>{S()=default;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,U,N,F>{S()=delete;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,U,N,F>{S();~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,F,N,F>{S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,F,N,F>{S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,F,N,F>{S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,F,N,F>{S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,F,N,F>{~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,F,N,F>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,F,N,F>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,F,N,F>{S();~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,F,N,F>{~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,F,N,F>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,F,N,F>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,F,N,F>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,F,N,F>{~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,F,N,F>{S()=default;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,F,N,F>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,F,N,F>{S();~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,F,N,F>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,F,N,F>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,F,N,F>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,F,N,F>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,F,N,F>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,F,N,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,F,N,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,F,N,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,F,N,F>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,F,N,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,F,N,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,F,N,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,F,N,F>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,F,N,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,F,N,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,F,N,F>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,F,N,F>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,F,N,F>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,F,N,F>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,F,N,F>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,F,N,F>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,F,N,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,F,N,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,F,N,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,F,N,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,F,N,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,F,N,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,F,N,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,F,N,F>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,F,N,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,F,N,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,F,N,F>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,F,N,F>{S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,F,N,F>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,F,N,F>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,F,N,F>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,F,N,F>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,F,N,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,F,N,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,F,N,F>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,F,N,F>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,F,N,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,F,N,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,F,N,F>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,F,N,F>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,F,N,F>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,F,N,F>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,F,N,F>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,D,N,F>{S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,D,N,F>{S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,D,N,F>{S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,D,N,F>{S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,D,N,F>{~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,D,N,F>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,D,N,F>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,D,N,F>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,D,N,F>{~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,D,N,F>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,D,N,F>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,D,N,F>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,D,N,F>{~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,D,N,F>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,D,N,F>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,D,N,F>{S();~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,D,N,F>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,D,N,F>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,D,N,F>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,D,N,F>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,D,N,F>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,D,N,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,D,N,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,D,N,F>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,D,N,F>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,D,N,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,D,N,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,D,N,F>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,D,N,F>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,D,N,F>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,D,N,F>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,D,N,F>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,D,N,F>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,D,N,F>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,D,N,F>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,D,N,F>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,D,N,F>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,D,N,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,D,N,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,D,N,F>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,D,N,F>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,D,N,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,D,N,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,D,N,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,D,N,F>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,D,N,F>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,D,N,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,D,N,F>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,D,N,F>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,D,N,F>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,D,N,F>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,D,N,F>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,D,N,F>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,D,N,F>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,D,N,F>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,D,N,F>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,D,N,F>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,D,N,F>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,D,N,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,D,N,F>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,D,N,F>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,D,N,F>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,D,N,F>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,D,N,F>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,N,N,F>{S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,U,N,N,F>{S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,U,N,N,F>{S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,U,N,N,F>{S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,U,N,N,F>{~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,U,N,N,F>{S()=default;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,U,N,N,F>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,U,N,N,F>{S();~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,U,N,N,F>{~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,U,N,N,F>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,U,N,N,F>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,U,N,N,F>{S();~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,U,N,N,F>{~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,U,N,N,F>{S()=default;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,U,N,N,F>{S()=delete;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,U,N,N,F>{S();~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,F,N,N,F>{S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,F,N,N,F>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,F,N,N,F>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,F,N,N,F>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,F,N,N,F>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,F,N,N,F>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,F,N,N,F>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,F,N,N,F>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,F,N,N,F>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,F,N,N,F>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,F,N,N,F>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,F,N,N,F>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,F,N,N,F>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,F,N,N,F>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,F,N,N,F>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,F,N,N,F>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,D,N,N,F>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,D,N,N,F>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,D,N,N,F>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,D,N,N,F>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,D,N,N,F>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,D,N,N,F>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,D,N,N,F>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,D,N,N,F>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,D,N,N,F>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,D,N,N,F>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,D,N,N,F>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,D,N,N,F>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,D,N,N,F>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,D,N,N,F>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,D,N,N,F>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,D,N,N,F>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,N,N,N,F>{S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,U,N,N,N,F>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,U,N,N,N,F>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,U,N,N,N,F>{S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,F,N,N,N,F>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,F,N,N,N,F>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,F,N,N,N,F>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,F,N,N,N,F>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,D,N,N,N,F>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,D,N,N,N,F>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,D,N,N,N,F>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,D,N,N,N,F>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,N,N,N,N,F>{~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<F,N,N,N,N,F>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<D,N,N,N,N,F>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<N,N,N,N,N,F>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =default;};
template<>struct S<U,U,U,U,U,D>{S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,U,U,D>{S()=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,U,U,D>{S()=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,U,U,D>{S();S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,U,U,D>{~S()=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,U,U,D>{S()=default;~S()=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,U,U,D>{S()=delete;~S()=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,U,U,D>{S();~S()=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,U,U,D>{~S()=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,U,U,D>{S()=default;~S()=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,U,U,D>{S()=delete;~S()=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,U,U,D>{S();~S()=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,U,U,D>{~S();S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,U,U,D>{S()=default;~S();S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,U,U,D>{S()=delete;~S();S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,U,U,D>{S();~S();S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,U,U,D>{S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,U,U,D>{S()=default;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,U,U,D>{S()=delete;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,U,U,D>{S();S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,U,U,D>{~S()=default;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,U,U,D>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,U,U,D>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,U,U,D>{S();~S()=default;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,U,U,D>{~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,U,U,D>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,U,U,D>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,U,U,D>{S();~S()=delete;S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,U,U,D>{~S();S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,U,U,D>{S()=default;~S();S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,U,U,D>{S()=delete;~S();S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,U,U,D>{S();~S();S(CR<S>)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,U,U,D>{S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,U,U,D>{S()=default;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,U,U,D>{S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,U,U,D>{S();S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,U,U,D>{~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,U,U,D>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,U,U,D>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,U,U,D>{S();~S()=default;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,U,U,D>{~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,U,U,D>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,U,U,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,U,U,D>{S();~S()=delete;S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,U,U,D>{~S();S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,U,U,D>{S()=default;~S();S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,U,U,D>{S()=delete;~S();S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,U,U,D>{S();~S();S(CR<S>)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,U,U,D>{S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,U,U,D>{S()=default;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,U,U,D>{S()=delete;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,U,U,D>{S();S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,U,U,D>{~S()=default;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,U,U,D>{S()=default;~S()=default;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,U,U,D>{S()=delete;~S()=default;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,U,U,D>{S();~S()=default;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,U,U,D>{~S()=delete;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,U,U,D>{S()=default;~S()=delete;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,U,U,D>{S()=delete;~S()=delete;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,U,U,D>{S();~S()=delete;S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,U,U,D>{~S();S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,U,U,D>{S()=default;~S();S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,U,U,D>{S()=delete;~S();S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,U,U,D>{S();~S();S(CR<S>);S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,F,U,D>{S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,F,U,D>{S()=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,F,U,D>{S()=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,F,U,D>{S();S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,F,U,D>{~S()=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,F,U,D>{S()=default;~S()=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,F,U,D>{S()=delete;~S()=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,F,U,D>{S();~S()=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,F,U,D>{~S()=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,F,U,D>{S()=default;~S()=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,F,U,D>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,F,U,D>{S();~S()=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,F,U,D>{~S();S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,F,U,D>{S()=default;~S();S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,F,U,D>{S()=delete;~S();S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,F,U,D>{S();~S();S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,F,U,D>{S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,F,U,D>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,F,U,D>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,F,U,D>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,F,U,D>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,F,U,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,F,U,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,F,U,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,F,U,D>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,F,U,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,F,U,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,F,U,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,F,U,D>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,F,U,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,F,U,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,F,U,D>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,F,U,D>{S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,F,U,D>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,F,U,D>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,F,U,D>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,F,U,D>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,F,U,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,F,U,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,F,U,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,F,U,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,F,U,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,F,U,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,F,U,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,F,U,D>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,F,U,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,F,U,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,F,U,D>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,F,U,D>{S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,F,U,D>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,F,U,D>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,F,U,D>{S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,F,U,D>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,F,U,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,F,U,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,F,U,D>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,F,U,D>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,F,U,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,F,U,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,F,U,D>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,F,U,D>{~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,F,U,D>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,F,U,D>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,F,U,D>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,D,U,D>{S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,D,U,D>{S()=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,D,U,D>{S()=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,D,U,D>{S();S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,D,U,D>{~S()=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,D,U,D>{S()=default;~S()=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,D,U,D>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,D,U,D>{S();~S()=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,D,U,D>{~S()=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,D,U,D>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,D,U,D>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,D,U,D>{S();~S()=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,D,U,D>{~S();S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,D,U,D>{S()=default;~S();S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,D,U,D>{S()=delete;~S();S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,D,U,D>{S();~S();S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,D,U,D>{S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,D,U,D>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,D,U,D>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,D,U,D>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,D,U,D>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,D,U,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,D,U,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,D,U,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,D,U,D>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,D,U,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,D,U,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,D,U,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,D,U,D>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,D,U,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,D,U,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,D,U,D>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,D,U,D>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,D,U,D>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,D,U,D>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,D,U,D>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,D,U,D>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,D,U,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,D,U,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,D,U,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,D,U,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,D,U,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,D,U,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,D,U,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,D,U,D>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,D,U,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,D,U,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,D,U,D>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,D,U,D>{S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,D,U,D>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,D,U,D>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,D,U,D>{S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,D,U,D>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,D,U,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,D,U,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,D,U,D>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,D,U,D>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,D,U,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,D,U,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,D,U,D>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,D,U,D>{~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,D,U,D>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,D,U,D>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,D,U,D>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,N,U,D>{S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,N,U,D>{S()=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,N,U,D>{S()=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,N,U,D>{S();S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,N,U,D>{~S()=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,N,U,D>{S()=default;~S()=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,N,U,D>{S()=delete;~S()=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,N,U,D>{S();~S()=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,N,U,D>{~S()=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,N,U,D>{S()=default;~S()=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,N,U,D>{S()=delete;~S()=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,N,U,D>{S();~S()=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,N,U,D>{~S();S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,N,U,D>{S()=default;~S();S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,N,U,D>{S()=delete;~S();S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,N,U,D>{S();~S();S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,N,U,D>{S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,N,U,D>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,N,U,D>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,N,U,D>{S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,N,U,D>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,N,U,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,N,U,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,N,U,D>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,N,U,D>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,N,U,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,N,U,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,N,U,D>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,N,U,D>{~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,N,U,D>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,N,U,D>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,N,U,D>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,N,U,D>{S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,N,U,D>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,N,U,D>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,N,U,D>{S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,N,U,D>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,N,U,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,N,U,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,N,U,D>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,N,U,D>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,N,U,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,N,U,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,N,U,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,N,U,D>{~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,N,U,D>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,N,U,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,N,U,D>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,N,U,D>{S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,N,U,D>{S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,N,U,D>{S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,N,U,D>{S();S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,N,U,D>{~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,N,U,D>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,N,U,D>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,N,U,D>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,N,U,D>{~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,N,U,D>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,N,U,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,N,U,D>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,N,U,D>{~S();S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,N,U,D>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,N,U,D>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,N,U,D>{S();~S();S(CR<S>);S(S&&);S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,U,F,D>{S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,U,F,D>{S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,U,F,D>{S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,U,F,D>{S();S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,U,F,D>{~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,U,F,D>{S()=default;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,U,F,D>{S()=delete;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,U,F,D>{S();~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,U,F,D>{~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,U,F,D>{S()=default;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,U,F,D>{S()=delete;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,U,F,D>{S();~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,U,F,D>{~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,U,F,D>{S()=default;~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,U,F,D>{S()=delete;~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,U,F,D>{S();~S();S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,U,F,D>{S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,U,F,D>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,U,F,D>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,U,F,D>{S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,U,F,D>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,U,F,D>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,U,F,D>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,U,F,D>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,U,F,D>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,U,F,D>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,U,F,D>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,U,F,D>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,U,F,D>{~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,U,F,D>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,U,F,D>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,U,F,D>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,U,F,D>{S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,U,F,D>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,U,F,D>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,U,F,D>{S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,U,F,D>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,U,F,D>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,U,F,D>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,U,F,D>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,U,F,D>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,U,F,D>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,U,F,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,U,F,D>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,U,F,D>{~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,U,F,D>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,U,F,D>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,U,F,D>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,U,F,D>{S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,U,F,D>{S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,U,F,D>{S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,U,F,D>{S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,U,F,D>{~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,U,F,D>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,U,F,D>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,U,F,D>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,U,F,D>{~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,U,F,D>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,U,F,D>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,U,F,D>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,U,F,D>{~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,U,F,D>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,U,F,D>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,U,F,D>{S();~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,F,F,D>{S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,F,F,D>{S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,F,F,D>{S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,F,F,D>{S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,F,F,D>{~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,F,F,D>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,F,F,D>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,F,F,D>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,F,F,D>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,F,F,D>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,F,F,D>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,F,F,D>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,F,F,D>{~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,F,F,D>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,F,F,D>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,F,F,D>{S();~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,F,F,D>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,F,F,D>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,F,F,D>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,F,F,D>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,F,F,D>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,F,F,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,F,F,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,F,F,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,F,F,D>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,F,F,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,F,F,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,F,F,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,F,F,D>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,F,F,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,F,F,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,F,F,D>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,F,F,D>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,F,F,D>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,F,F,D>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,F,F,D>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,F,F,D>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,F,F,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,F,F,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,F,F,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,F,F,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,F,F,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,F,F,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,F,F,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,F,F,D>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,F,F,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,F,F,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,F,F,D>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,F,F,D>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,F,F,D>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,F,F,D>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,F,F,D>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,F,F,D>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,F,F,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,F,F,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,F,F,D>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,F,F,D>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,F,F,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,F,F,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,F,F,D>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,F,F,D>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,F,F,D>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,F,F,D>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,F,F,D>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,D,F,D>{S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,D,F,D>{S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,D,F,D>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,D,F,D>{S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,D,F,D>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,D,F,D>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,D,F,D>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,D,F,D>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,D,F,D>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,D,F,D>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,D,F,D>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,D,F,D>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,D,F,D>{~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,D,F,D>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,D,F,D>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,D,F,D>{S();~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,D,F,D>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,D,F,D>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,D,F,D>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,D,F,D>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,D,F,D>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,D,F,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,D,F,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,D,F,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,D,F,D>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,D,F,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,D,F,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,D,F,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,D,F,D>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,D,F,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,D,F,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,D,F,D>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,D,F,D>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,D,F,D>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,D,F,D>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,D,F,D>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,D,F,D>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,D,F,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,D,F,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,D,F,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,D,F,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,D,F,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,D,F,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,D,F,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,D,F,D>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,D,F,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,D,F,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,D,F,D>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,D,F,D>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,D,F,D>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,D,F,D>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,D,F,D>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,D,F,D>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,D,F,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,D,F,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,D,F,D>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,D,F,D>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,D,F,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,D,F,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,D,F,D>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,D,F,D>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,D,F,D>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,D,F,D>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,D,F,D>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,N,F,D>{S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,N,F,D>{S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,N,F,D>{S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,N,F,D>{S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,N,F,D>{~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,N,F,D>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,N,F,D>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,N,F,D>{S();~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,N,F,D>{~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,N,F,D>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,N,F,D>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,N,F,D>{S();~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,N,F,D>{~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,N,F,D>{S()=default;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,N,F,D>{S()=delete;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,N,F,D>{S();~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,N,F,D>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,N,F,D>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,N,F,D>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,N,F,D>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,N,F,D>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,N,F,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,N,F,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,N,F,D>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,N,F,D>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,N,F,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,N,F,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,N,F,D>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,N,F,D>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,N,F,D>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,N,F,D>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,N,F,D>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,N,F,D>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,N,F,D>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,N,F,D>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,N,F,D>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,N,F,D>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,N,F,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,N,F,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,N,F,D>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,N,F,D>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,N,F,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,N,F,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,N,F,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,N,F,D>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,N,F,D>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,N,F,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,N,F,D>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,N,F,D>{S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,N,F,D>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,N,F,D>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,N,F,D>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,N,F,D>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,N,F,D>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,N,F,D>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,N,F,D>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,N,F,D>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,N,F,D>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,N,F,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,N,F,D>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,N,F,D>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,N,F,D>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,N,F,D>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,N,F,D>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,U,D,D>{S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,U,D,D>{S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,U,D,D>{S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,U,D,D>{S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,U,D,D>{~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,U,D,D>{S()=default;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,U,D,D>{S()=delete;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,U,D,D>{S();~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,U,D,D>{~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,U,D,D>{S()=default;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,U,D,D>{S()=delete;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,U,D,D>{S();~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,U,D,D>{~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,U,D,D>{S()=default;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,U,D,D>{S()=delete;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,U,D,D>{S();~S();S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,U,D,D>{S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,U,D,D>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,U,D,D>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,U,D,D>{S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,U,D,D>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,U,D,D>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,U,D,D>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,U,D,D>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,U,D,D>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,U,D,D>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,U,D,D>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,U,D,D>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,U,D,D>{~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,U,D,D>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,U,D,D>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,U,D,D>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,U,D,D>{S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,U,D,D>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,U,D,D>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,U,D,D>{S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,U,D,D>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,U,D,D>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,U,D,D>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,U,D,D>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,U,D,D>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,U,D,D>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,U,D,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,U,D,D>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,U,D,D>{~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,U,D,D>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,U,D,D>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,U,D,D>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,U,D,D>{S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,U,D,D>{S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,U,D,D>{S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,U,D,D>{S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,U,D,D>{~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,U,D,D>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,U,D,D>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,U,D,D>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,U,D,D>{~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,U,D,D>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,U,D,D>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,U,D,D>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,U,D,D>{~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,U,D,D>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,U,D,D>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,U,D,D>{S();~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,F,D,D>{S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,F,D,D>{S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,F,D,D>{S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,F,D,D>{S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,F,D,D>{~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,F,D,D>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,F,D,D>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,F,D,D>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,F,D,D>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,F,D,D>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,F,D,D>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,F,D,D>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,F,D,D>{~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,F,D,D>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,F,D,D>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,F,D,D>{S();~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,F,D,D>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,F,D,D>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,F,D,D>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,F,D,D>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,F,D,D>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,F,D,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,F,D,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,F,D,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,F,D,D>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,F,D,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,F,D,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,F,D,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,F,D,D>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,F,D,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,F,D,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,F,D,D>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,F,D,D>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,F,D,D>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,F,D,D>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,F,D,D>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,F,D,D>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,F,D,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,F,D,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,F,D,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,F,D,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,F,D,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,F,D,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,F,D,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,F,D,D>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,F,D,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,F,D,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,F,D,D>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,F,D,D>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,F,D,D>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,F,D,D>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,F,D,D>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,F,D,D>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,F,D,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,F,D,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,F,D,D>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,F,D,D>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,F,D,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,F,D,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,F,D,D>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,F,D,D>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,F,D,D>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,F,D,D>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,F,D,D>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,D,D,D>{S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,D,D,D>{S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,D,D,D>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,D,D,D>{S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,D,D,D>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,D,D,D>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,D,D,D>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,D,D,D>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,D,D,D>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,D,D,D>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,D,D,D>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,D,D,D>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,D,D,D>{~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,D,D,D>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,D,D,D>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,D,D,D>{S();~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,D,D,D>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,D,D,D>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,D,D,D>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,D,D,D>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,D,D,D>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,D,D,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,D,D,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,D,D,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,D,D,D>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,D,D,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,D,D,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,D,D,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,D,D,D>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,D,D,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,D,D,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,D,D,D>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,D,D,D>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,D,D,D>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,D,D,D>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,D,D,D>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,D,D,D>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,D,D,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,D,D,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,D,D,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,D,D,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,D,D,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,D,D,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,D,D,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,D,D,D>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,D,D,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,D,D,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,D,D,D>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,D,D,D>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,D,D,D>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,D,D,D>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,D,D,D>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,D,D,D>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,D,D,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,D,D,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,D,D,D>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,D,D,D>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,D,D,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,D,D,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,D,D,D>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,D,D,D>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,D,D,D>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,D,D,D>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,D,D,D>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,N,D,D>{S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,U,N,D,D>{S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,U,N,D,D>{S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,U,N,D,D>{S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,U,N,D,D>{~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,U,N,D,D>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,U,N,D,D>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,U,N,D,D>{S();~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,U,N,D,D>{~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,U,N,D,D>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,U,N,D,D>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,U,N,D,D>{S();~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,U,N,D,D>{~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,U,N,D,D>{S()=default;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,U,N,D,D>{S()=delete;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,U,N,D,D>{S();~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,F,N,D,D>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,F,N,D,D>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,F,N,D,D>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,F,N,D,D>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,F,N,D,D>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,F,N,D,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,F,N,D,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,F,N,D,D>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,F,N,D,D>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,F,N,D,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,F,N,D,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,F,N,D,D>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,F,N,D,D>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,F,N,D,D>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,F,N,D,D>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,F,N,D,D>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,D,N,D,D>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,D,N,D,D>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,D,N,D,D>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,D,N,D,D>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,D,N,D,D>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,D,N,D,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,D,N,D,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,D,N,D,D>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,D,N,D,D>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,D,N,D,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,D,N,D,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,D,N,D,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,D,N,D,D>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,D,N,D,D>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,D,N,D,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,D,N,D,D>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,N,N,D,D>{S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,U,N,N,D,D>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,U,N,N,D,D>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,U,N,N,D,D>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,F,N,N,D,D>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,F,N,N,D,D>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,F,N,N,D,D>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,F,N,N,D,D>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,D,N,N,D,D>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,D,N,N,D,D>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,D,N,N,D,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,D,N,N,D,D>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,N,N,N,D,D>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<F,N,N,N,D,D>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<D,N,N,N,D,D>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<N,N,N,N,D,D>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&     =delete;};
template<>struct S<U,U,U,U,N,D>{S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,U,N,D>{S()=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,U,N,D>{S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,U,N,D>{S();S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,U,N,D>{~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,U,N,D>{S()=default;~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,U,N,D>{S()=delete;~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,U,N,D>{S();~S()=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,U,N,D>{~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,U,N,D>{S()=default;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,U,N,D>{S()=delete;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,U,N,D>{S();~S()=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,U,N,D>{~S();S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,U,N,D>{S()=default;~S();S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,U,N,D>{S()=delete;~S();S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,U,N,D>{S();~S();S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,U,N,D>{S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,U,N,D>{S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,U,N,D>{S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,U,N,D>{S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,U,N,D>{~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,U,N,D>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,U,N,D>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,U,N,D>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,U,N,D>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,U,N,D>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,U,N,D>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,U,N,D>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,U,N,D>{~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,U,N,D>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,U,N,D>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,U,N,D>{S();~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,U,N,D>{S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,U,N,D>{S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,U,N,D>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,U,N,D>{S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,U,N,D>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,U,N,D>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,U,N,D>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,U,N,D>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,U,N,D>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,U,N,D>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,U,N,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,U,N,D>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,U,N,D>{~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,U,N,D>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,U,N,D>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,U,N,D>{S();~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,U,N,D>{S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,U,N,D>{S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,U,N,D>{S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,U,N,D>{S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,U,N,D>{~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,U,N,D>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,U,N,D>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,U,N,D>{S();~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,U,N,D>{~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,U,N,D>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,U,N,D>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,U,N,D>{S();~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,U,N,D>{~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,U,N,D>{S()=default;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,U,N,D>{S()=delete;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,U,N,D>{S();~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,F,N,D>{S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,F,N,D>{S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,F,N,D>{S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,F,N,D>{S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,F,N,D>{~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,F,N,D>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,F,N,D>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,F,N,D>{S();~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,F,N,D>{~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,F,N,D>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,F,N,D>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,F,N,D>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,F,N,D>{~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,F,N,D>{S()=default;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,F,N,D>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,F,N,D>{S();~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,F,N,D>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,F,N,D>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,F,N,D>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,F,N,D>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,F,N,D>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,F,N,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,F,N,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,F,N,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,F,N,D>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,F,N,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,F,N,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,F,N,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,F,N,D>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,F,N,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,F,N,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,F,N,D>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,F,N,D>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,F,N,D>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,F,N,D>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,F,N,D>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,F,N,D>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,F,N,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,F,N,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,F,N,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,F,N,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,F,N,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,F,N,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,F,N,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,F,N,D>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,F,N,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,F,N,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,F,N,D>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,F,N,D>{S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,F,N,D>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,F,N,D>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,F,N,D>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,F,N,D>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,F,N,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,F,N,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,F,N,D>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,F,N,D>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,F,N,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,F,N,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,F,N,D>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,F,N,D>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,F,N,D>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,F,N,D>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,F,N,D>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,D,N,D>{S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,D,N,D>{S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,D,N,D>{S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,D,N,D>{S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,D,N,D>{~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,D,N,D>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,D,N,D>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,D,N,D>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,D,N,D>{~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,D,N,D>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,D,N,D>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,D,N,D>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,D,N,D>{~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,D,N,D>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,D,N,D>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,D,N,D>{S();~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,D,N,D>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,D,N,D>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,D,N,D>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,D,N,D>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,D,N,D>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,D,N,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,D,N,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,D,N,D>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,D,N,D>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,D,N,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,D,N,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,D,N,D>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,D,N,D>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,D,N,D>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,D,N,D>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,D,N,D>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,D,N,D>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,D,N,D>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,D,N,D>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,D,N,D>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,D,N,D>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,D,N,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,D,N,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,D,N,D>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,D,N,D>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,D,N,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,D,N,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,D,N,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,D,N,D>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,D,N,D>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,D,N,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,D,N,D>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,D,N,D>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,D,N,D>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,D,N,D>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,D,N,D>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,D,N,D>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,D,N,D>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,D,N,D>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,D,N,D>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,D,N,D>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,D,N,D>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,D,N,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,D,N,D>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,D,N,D>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,D,N,D>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,D,N,D>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,D,N,D>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,N,N,D>{S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,U,N,N,D>{S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,U,N,N,D>{S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,U,N,N,D>{S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,U,N,N,D>{~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,U,N,N,D>{S()=default;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,U,N,N,D>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,U,N,N,D>{S();~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,U,N,N,D>{~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,U,N,N,D>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,U,N,N,D>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,U,N,N,D>{S();~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,U,N,N,D>{~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,U,N,N,D>{S()=default;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,U,N,N,D>{S()=delete;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,U,N,N,D>{S();~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,F,N,N,D>{S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,F,N,N,D>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,F,N,N,D>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,F,N,N,D>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,F,N,N,D>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,F,N,N,D>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,F,N,N,D>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,F,N,N,D>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,F,N,N,D>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,F,N,N,D>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,F,N,N,D>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,F,N,N,D>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,F,N,N,D>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,F,N,N,D>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,F,N,N,D>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,F,N,N,D>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,D,N,N,D>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,D,N,N,D>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,D,N,N,D>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,D,N,N,D>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,D,N,N,D>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,D,N,N,D>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,D,N,N,D>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,D,N,N,D>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,D,N,N,D>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,D,N,N,D>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,D,N,N,D>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,D,N,N,D>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,D,N,N,D>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,D,N,N,D>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,D,N,N,D>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,D,N,N,D>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,N,N,N,D>{S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,U,N,N,N,D>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,U,N,N,N,D>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,U,N,N,N,D>{S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,F,N,N,N,D>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,F,N,N,N,D>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,F,N,N,N,D>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,F,N,N,N,D>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,D,N,N,N,D>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,D,N,N,N,D>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,D,N,N,N,D>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,D,N,N,N,D>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,N,N,N,N,D>{~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<F,N,N,N,N,D>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<D,N,N,N,N,D>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<N,N,N,N,N,D>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)& =delete;};
template<>struct S<U,U,U,U,U,N>{S&operator=(S&&)&;};
template<>struct S<F,U,U,U,U,N>{S()=default;S&operator=(S&&)&;};
template<>struct S<D,U,U,U,U,N>{S()=delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,U,U,N>{S();S&operator=(S&&)&;};
template<>struct S<U,F,U,U,U,N>{~S()=default;S&operator=(S&&)&;};
template<>struct S<F,F,U,U,U,N>{S()=default;~S()=default;S&operator=(S&&)&;};
template<>struct S<D,F,U,U,U,N>{S()=delete;~S()=default;S&operator=(S&&)&;};
template<>struct S<N,F,U,U,U,N>{S();~S()=default;S&operator=(S&&)&;};
template<>struct S<U,D,U,U,U,N>{~S()=delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,U,U,N>{S()=default;~S()=delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,U,U,N>{S()=delete;~S()=delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,U,U,N>{S();~S()=delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,U,U,N>{~S();S&operator=(S&&)&;};
template<>struct S<F,N,U,U,U,N>{S()=default;~S();S&operator=(S&&)&;};
template<>struct S<D,N,U,U,U,N>{S()=delete;~S();S&operator=(S&&)&;};
template<>struct S<N,N,U,U,U,N>{S();~S();S&operator=(S&&)&;};
template<>struct S<U,U,F,U,U,N>{S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<F,U,F,U,U,N>{S()=default;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<D,U,F,U,U,N>{S()=delete;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<N,U,F,U,U,N>{S();S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<U,F,F,U,U,N>{~S()=default;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<F,F,F,U,U,N>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<D,F,F,U,U,N>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<N,F,F,U,U,N>{S();~S()=default;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<U,D,F,U,U,N>{~S()=delete;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<F,D,F,U,U,N>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<D,D,F,U,U,N>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<N,D,F,U,U,N>{S();~S()=delete;S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<U,N,F,U,U,N>{~S();S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<F,N,F,U,U,N>{S()=default;~S();S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<D,N,F,U,U,N>{S()=delete;~S();S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<N,N,F,U,U,N>{S();~S();S(CR<S>)=default;S&operator=(S&&)&;};
template<>struct S<U,U,D,U,U,N>{S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,U,U,N>{S()=default;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,U,U,N>{S()=delete;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,U,U,N>{S();S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,U,U,N>{~S()=default;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,U,U,N>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,U,U,N>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,U,U,N>{S();~S()=default;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,U,U,N>{~S()=delete;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,U,U,N>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,U,U,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,U,U,N>{S();~S()=delete;S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,U,U,N>{~S();S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,U,U,N>{S()=default;~S();S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,U,U,N>{S()=delete;~S();S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,U,U,N>{S();~S();S(CR<S>)=delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,U,U,N>{S(CR<S>);S&operator=(S&&)&;};
template<>struct S<F,U,N,U,U,N>{S()=default;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<D,U,N,U,U,N>{S()=delete;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<N,U,N,U,U,N>{S();S(CR<S>);S&operator=(S&&)&;};
template<>struct S<U,F,N,U,U,N>{~S()=default;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<F,F,N,U,U,N>{S()=default;~S()=default;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<D,F,N,U,U,N>{S()=delete;~S()=default;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<N,F,N,U,U,N>{S();~S()=default;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<U,D,N,U,U,N>{~S()=delete;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<F,D,N,U,U,N>{S()=default;~S()=delete;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<D,D,N,U,U,N>{S()=delete;~S()=delete;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<N,D,N,U,U,N>{S();~S()=delete;S(CR<S>);S&operator=(S&&)&;};
template<>struct S<U,N,N,U,U,N>{~S();S(CR<S>);S&operator=(S&&)&;};
template<>struct S<F,N,N,U,U,N>{S()=default;~S();S(CR<S>);S&operator=(S&&)&;};
template<>struct S<D,N,N,U,U,N>{S()=delete;~S();S(CR<S>);S&operator=(S&&)&;};
template<>struct S<N,N,N,U,U,N>{S();~S();S(CR<S>);S&operator=(S&&)&;};
template<>struct S<U,U,U,F,U,N>{S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,U,U,F,U,N>{S()=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,U,U,F,U,N>{S()=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,U,U,F,U,N>{S();S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,F,U,F,U,N>{~S()=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,F,U,F,U,N>{S()=default;~S()=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,F,U,F,U,N>{S()=delete;~S()=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,F,U,F,U,N>{S();~S()=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,D,U,F,U,N>{~S()=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,D,U,F,U,N>{S()=default;~S()=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,D,U,F,U,N>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,D,U,F,U,N>{S();~S()=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,N,U,F,U,N>{~S();S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,N,U,F,U,N>{S()=default;~S();S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,N,U,F,U,N>{S()=delete;~S();S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,N,U,F,U,N>{S();~S();S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,U,F,F,U,N>{S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,U,F,F,U,N>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,U,F,F,U,N>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,U,F,F,U,N>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,F,F,F,U,N>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,F,F,F,U,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,F,F,F,U,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,F,F,F,U,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,D,F,F,U,N>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,D,F,F,U,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,D,F,F,U,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,D,F,F,U,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,N,F,F,U,N>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,N,F,F,U,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,N,F,F,U,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,N,F,F,U,N>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,U,D,F,U,N>{S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,U,D,F,U,N>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,U,D,F,U,N>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,U,D,F,U,N>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,F,D,F,U,N>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,F,D,F,U,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,F,D,F,U,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,F,D,F,U,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,D,D,F,U,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,D,D,F,U,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,D,D,F,U,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,D,D,F,U,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,N,D,F,U,N>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,N,D,F,U,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,N,D,F,U,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,N,D,F,U,N>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,U,N,F,U,N>{S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,U,N,F,U,N>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,U,N,F,U,N>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,U,N,F,U,N>{S();S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,F,N,F,U,N>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,F,N,F,U,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,F,N,F,U,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,F,N,F,U,N>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,D,N,F,U,N>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,D,N,F,U,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,D,N,F,U,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,D,N,F,U,N>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,N,N,F,U,N>{~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<F,N,N,F,U,N>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<D,N,N,F,U,N>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<N,N,N,F,U,N>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(S&&)&;};
template<>struct S<U,U,U,D,U,N>{S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,U,U,D,U,N>{S()=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,U,U,D,U,N>{S()=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,D,U,N>{S();S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,F,U,D,U,N>{~S()=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,F,U,D,U,N>{S()=default;~S()=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,F,U,D,U,N>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,F,U,D,U,N>{S();~S()=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,D,U,D,U,N>{~S()=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,D,U,N>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,D,U,N>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,D,U,N>{S();~S()=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,D,U,N>{~S();S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,N,U,D,U,N>{S()=default;~S();S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,N,U,D,U,N>{S()=delete;~S();S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,N,U,D,U,N>{S();~S();S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,U,F,D,U,N>{S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,U,F,D,U,N>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,U,F,D,U,N>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,U,F,D,U,N>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,F,F,D,U,N>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,F,F,D,U,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,F,F,D,U,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,F,F,D,U,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,D,F,D,U,N>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,D,F,D,U,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,D,F,D,U,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,D,F,D,U,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,N,F,D,U,N>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,N,F,D,U,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,N,F,D,U,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,N,F,D,U,N>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,U,D,D,U,N>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,D,U,N>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,D,U,N>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,D,U,N>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,D,U,N>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,D,U,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,D,U,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,D,U,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,D,U,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,D,U,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,D,U,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,D,U,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,D,U,N>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,D,U,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,D,U,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,D,U,N>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,D,U,N>{S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,U,N,D,U,N>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,U,N,D,U,N>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,U,N,D,U,N>{S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,F,N,D,U,N>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,F,N,D,U,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,F,N,D,U,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,F,N,D,U,N>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,D,N,D,U,N>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,D,N,D,U,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,D,N,D,U,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,D,N,D,U,N>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,N,N,D,U,N>{~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<F,N,N,D,U,N>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<D,N,N,D,U,N>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<N,N,N,D,U,N>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(S&&)&;};
template<>struct S<U,U,U,N,U,N>{S(S&&);S&operator=(S&&)&;};
template<>struct S<F,U,U,N,U,N>{S()=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,U,U,N,U,N>{S()=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,U,U,N,U,N>{S();S(S&&);S&operator=(S&&)&;};
template<>struct S<U,F,U,N,U,N>{~S()=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,F,U,N,U,N>{S()=default;~S()=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,F,U,N,U,N>{S()=delete;~S()=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,F,U,N,U,N>{S();~S()=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,D,U,N,U,N>{~S()=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,D,U,N,U,N>{S()=default;~S()=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,D,U,N,U,N>{S()=delete;~S()=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,D,U,N,U,N>{S();~S()=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,N,U,N,U,N>{~S();S(S&&);S&operator=(S&&)&;};
template<>struct S<F,N,U,N,U,N>{S()=default;~S();S(S&&);S&operator=(S&&)&;};
template<>struct S<D,N,U,N,U,N>{S()=delete;~S();S(S&&);S&operator=(S&&)&;};
template<>struct S<N,N,U,N,U,N>{S();~S();S(S&&);S&operator=(S&&)&;};
template<>struct S<U,U,F,N,U,N>{S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,U,F,N,U,N>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,U,F,N,U,N>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,U,F,N,U,N>{S();S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,F,F,N,U,N>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,F,F,N,U,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,F,F,N,U,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,F,F,N,U,N>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,D,F,N,U,N>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,D,F,N,U,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,D,F,N,U,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,D,F,N,U,N>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,N,F,N,U,N>{~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,N,F,N,U,N>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,N,F,N,U,N>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,N,F,N,U,N>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,U,D,N,U,N>{S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,U,D,N,U,N>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,U,D,N,U,N>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,U,D,N,U,N>{S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,F,D,N,U,N>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,F,D,N,U,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,F,D,N,U,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,F,D,N,U,N>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,D,D,N,U,N>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,D,D,N,U,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,D,D,N,U,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,D,D,N,U,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,N,D,N,U,N>{~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<F,N,D,N,U,N>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<D,N,D,N,U,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<N,N,D,N,U,N>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(S&&)&;};
template<>struct S<U,U,N,N,U,N>{S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<F,U,N,N,U,N>{S()=default;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<D,U,N,N,U,N>{S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<N,U,N,N,U,N>{S();S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<U,F,N,N,U,N>{~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<F,F,N,N,U,N>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<D,F,N,N,U,N>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<N,F,N,N,U,N>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<U,D,N,N,U,N>{~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<F,D,N,N,U,N>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<D,D,N,N,U,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<N,D,N,N,U,N>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<U,N,N,N,U,N>{~S();S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<F,N,N,N,U,N>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<D,N,N,N,U,N>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<N,N,N,N,U,N>{S();~S();S(CR<S>);S(S&&);S&operator=(S&&)&;};
template<>struct S<U,U,U,U,F,N>{S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,U,U,F,N>{S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,U,U,F,N>{S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,U,U,F,N>{S();S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,U,U,F,N>{~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,U,U,F,N>{S()=default;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,U,U,F,N>{S()=delete;~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,U,U,F,N>{S();~S()=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,U,U,F,N>{~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,U,U,F,N>{S()=default;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,U,U,F,N>{S()=delete;~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,U,U,F,N>{S();~S()=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,U,U,F,N>{~S();S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,U,U,F,N>{S()=default;~S();S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,U,U,F,N>{S()=delete;~S();S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,U,U,F,N>{S();~S();S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,F,U,F,N>{S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,F,U,F,N>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,F,U,F,N>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,F,U,F,N>{S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,F,U,F,N>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,F,U,F,N>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,F,U,F,N>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,F,U,F,N>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,F,U,F,N>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,F,U,F,N>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,F,U,F,N>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,F,U,F,N>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,F,U,F,N>{~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,F,U,F,N>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,F,U,F,N>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,F,U,F,N>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,D,U,F,N>{S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,D,U,F,N>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,D,U,F,N>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,D,U,F,N>{S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,D,U,F,N>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,D,U,F,N>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,D,U,F,N>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,D,U,F,N>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,D,U,F,N>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,D,U,F,N>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,D,U,F,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,D,U,F,N>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,D,U,F,N>{~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,D,U,F,N>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,D,U,F,N>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,D,U,F,N>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,N,U,F,N>{S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,N,U,F,N>{S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,N,U,F,N>{S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,N,U,F,N>{S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,N,U,F,N>{~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,N,U,F,N>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,N,U,F,N>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,N,U,F,N>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,N,U,F,N>{~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,N,U,F,N>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,N,U,F,N>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,N,U,F,N>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,N,U,F,N>{~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,N,U,F,N>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,N,U,F,N>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,N,U,F,N>{S();~S();S(CR<S>);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,U,F,F,N>{S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,U,F,F,N>{S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,U,F,F,N>{S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,U,F,F,N>{S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,U,F,F,N>{~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,U,F,F,N>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,U,F,F,N>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,U,F,F,N>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,U,F,F,N>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,U,F,F,N>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,U,F,F,N>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,U,F,F,N>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,U,F,F,N>{~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,U,F,F,N>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,U,F,F,N>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,U,F,F,N>{S();~S();S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,F,F,F,N>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,F,F,F,N>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,F,F,F,N>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,F,F,F,N>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,F,F,F,N>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,F,F,F,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,F,F,F,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,F,F,F,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,F,F,F,N>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,F,F,F,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,F,F,F,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,F,F,F,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,F,F,F,N>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,F,F,F,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,F,F,F,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,F,F,F,N>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,D,F,F,N>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,D,F,F,N>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,D,F,F,N>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,D,F,F,N>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,D,F,F,N>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,D,F,F,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,D,F,F,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,D,F,F,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,D,F,F,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,D,F,F,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,D,F,F,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,D,F,F,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,D,F,F,N>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,D,F,F,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,D,F,F,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,D,F,F,N>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,N,F,F,N>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,N,F,F,N>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,N,F,F,N>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,N,F,F,N>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,N,F,F,N>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,N,F,F,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,N,F,F,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,N,F,F,N>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,N,F,F,N>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,N,F,F,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,N,F,F,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,N,F,F,N>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,N,F,F,N>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,N,F,F,N>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,N,F,F,N>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,N,F,F,N>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,U,D,F,N>{S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,U,D,F,N>{S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,U,D,F,N>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,U,D,F,N>{S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,U,D,F,N>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,U,D,F,N>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,U,D,F,N>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,U,D,F,N>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,U,D,F,N>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,U,D,F,N>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,U,D,F,N>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,U,D,F,N>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,U,D,F,N>{~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,U,D,F,N>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,U,D,F,N>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,U,D,F,N>{S();~S();S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,F,D,F,N>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,F,D,F,N>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,F,D,F,N>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,F,D,F,N>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,F,D,F,N>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,F,D,F,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,F,D,F,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,F,D,F,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,F,D,F,N>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,F,D,F,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,F,D,F,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,F,D,F,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,F,D,F,N>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,F,D,F,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,F,D,F,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,F,D,F,N>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,D,D,F,N>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,D,D,F,N>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,D,D,F,N>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,D,D,F,N>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,D,D,F,N>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,D,D,F,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,D,D,F,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,D,D,F,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,D,D,F,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,D,D,F,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,D,D,F,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,D,D,F,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,D,D,F,N>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,D,D,F,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,D,D,F,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,D,D,F,N>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,N,D,F,N>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,N,D,F,N>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,N,D,F,N>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,N,D,F,N>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,N,D,F,N>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,N,D,F,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,N,D,F,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,N,D,F,N>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,N,D,F,N>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,N,D,F,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,N,D,F,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,N,D,F,N>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,N,D,F,N>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,N,D,F,N>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,N,D,F,N>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,N,D,F,N>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,U,N,F,N>{S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,U,N,F,N>{S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,U,N,F,N>{S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,U,N,F,N>{S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,U,N,F,N>{~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,U,N,F,N>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,U,N,F,N>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,U,N,F,N>{S();~S()=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,U,N,F,N>{~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,U,N,F,N>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,U,N,F,N>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,U,N,F,N>{S();~S()=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,U,N,F,N>{~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,U,N,F,N>{S()=default;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,U,N,F,N>{S()=delete;~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,U,N,F,N>{S();~S();S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,F,N,F,N>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,F,N,F,N>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,F,N,F,N>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,F,N,F,N>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,F,N,F,N>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,F,N,F,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,F,N,F,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,F,N,F,N>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,F,N,F,N>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,F,N,F,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,F,N,F,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,F,N,F,N>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,F,N,F,N>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,F,N,F,N>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,F,N,F,N>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,F,N,F,N>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,D,N,F,N>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,D,N,F,N>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,D,N,F,N>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,D,N,F,N>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,D,N,F,N>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,D,N,F,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,D,N,F,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,D,N,F,N>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,D,N,F,N>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,D,N,F,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,D,N,F,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,D,N,F,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,D,N,F,N>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,D,N,F,N>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,D,N,F,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,D,N,F,N>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,N,N,F,N>{S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,U,N,N,F,N>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,U,N,N,F,N>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,U,N,N,F,N>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,F,N,N,F,N>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,F,N,N,F,N>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,F,N,N,F,N>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,F,N,N,F,N>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,D,N,N,F,N>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,D,N,N,F,N>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,D,N,N,F,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,D,N,N,F,N>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,N,N,N,F,N>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<F,N,N,N,F,N>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<D,N,N,N,F,N>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<N,N,N,N,F,N>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =default;S&operator=(S&&)&;};
template<>struct S<U,U,U,U,D,N>{S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,U,U,D,N>{S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,U,U,D,N>{S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,U,D,N>{S();S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,U,U,D,N>{~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,U,U,D,N>{S()=default;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,U,U,D,N>{S()=delete;~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,U,U,D,N>{S();~S()=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,U,U,D,N>{~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,U,D,N>{S()=default;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,U,D,N>{S()=delete;~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,U,D,N>{S();~S()=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,U,D,N>{~S();S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,U,U,D,N>{S()=default;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,U,U,D,N>{S()=delete;~S();S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,U,U,D,N>{S();~S();S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,F,U,D,N>{S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,F,U,D,N>{S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,F,U,D,N>{S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,F,U,D,N>{S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,F,U,D,N>{~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,F,U,D,N>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,F,U,D,N>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,F,U,D,N>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,F,U,D,N>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,F,U,D,N>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,F,U,D,N>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,F,U,D,N>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,F,U,D,N>{~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,F,U,D,N>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,F,U,D,N>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,F,U,D,N>{S();~S();S(CR<S>)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,D,U,D,N>{S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,U,D,N>{S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,U,D,N>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,U,D,N>{S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,U,D,N>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,U,D,N>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,U,D,N>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,U,D,N>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,U,D,N>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,U,D,N>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,U,D,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,U,D,N>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,U,D,N>{~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,U,D,N>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,U,D,N>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,U,D,N>{S();~S();S(CR<S>)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,U,D,N>{S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,N,U,D,N>{S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,N,U,D,N>{S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,N,U,D,N>{S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,N,U,D,N>{~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,N,U,D,N>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,N,U,D,N>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,N,U,D,N>{S();~S()=default;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,N,U,D,N>{~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,N,U,D,N>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,N,U,D,N>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,N,U,D,N>{S();~S()=delete;S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,N,U,D,N>{~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,N,U,D,N>{S()=default;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,N,U,D,N>{S()=delete;~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,N,U,D,N>{S();~S();S(CR<S>);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,U,F,D,N>{S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,U,F,D,N>{S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,U,F,D,N>{S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,F,D,N>{S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,U,F,D,N>{~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,U,F,D,N>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,U,F,D,N>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,U,F,D,N>{S();~S()=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,U,F,D,N>{~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,F,D,N>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,F,D,N>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,F,D,N>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,F,D,N>{~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,U,F,D,N>{S()=default;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,U,F,D,N>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,U,F,D,N>{S();~S();S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,F,F,D,N>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,F,F,D,N>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,F,F,D,N>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,F,F,D,N>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,F,F,D,N>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,F,F,D,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,F,F,D,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,F,F,D,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,F,F,D,N>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,F,F,D,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,F,F,D,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,F,F,D,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,F,F,D,N>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,F,F,D,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,F,F,D,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,F,F,D,N>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,D,F,D,N>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,F,D,N>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,F,D,N>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,F,D,N>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,F,D,N>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,F,D,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,F,D,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,F,D,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,F,D,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,F,D,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,F,D,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,F,D,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,F,D,N>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,F,D,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,F,D,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,F,D,N>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,F,D,N>{S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,N,F,D,N>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,N,F,D,N>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,N,F,D,N>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,N,F,D,N>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,N,F,D,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,N,F,D,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,N,F,D,N>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,N,F,D,N>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,N,F,D,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,N,F,D,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,N,F,D,N>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,N,F,D,N>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,N,F,D,N>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,N,F,D,N>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,N,F,D,N>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,U,D,D,N>{S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,U,D,D,N>{S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,U,D,D,N>{S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,D,D,N>{S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,U,D,D,N>{~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,U,D,D,N>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,U,D,D,N>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,U,D,D,N>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,U,D,D,N>{~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,D,D,N>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,D,D,N>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,D,D,N>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,D,D,N>{~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,U,D,D,N>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,U,D,D,N>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,U,D,D,N>{S();~S();S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,F,D,D,N>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,F,D,D,N>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,F,D,D,N>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,F,D,D,N>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,F,D,D,N>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,F,D,D,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,F,D,D,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,F,D,D,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,F,D,D,N>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,F,D,D,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,F,D,D,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,F,D,D,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,F,D,D,N>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,F,D,D,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,F,D,D,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,F,D,D,N>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,D,D,D,N>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,D,D,N>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,D,D,N>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,D,D,N>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,D,D,N>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,D,D,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,D,D,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,D,D,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,D,D,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,D,D,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,D,D,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,D,D,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,D,D,N>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,D,D,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,D,D,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,D,D,N>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,D,D,N>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,N,D,D,N>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,N,D,D,N>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,N,D,D,N>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,N,D,D,N>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,N,D,D,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,N,D,D,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,N,D,D,N>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,N,D,D,N>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,N,D,D,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,N,D,D,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,N,D,D,N>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,N,D,D,N>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,N,D,D,N>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,N,D,D,N>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,N,D,D,N>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,U,N,D,N>{S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,U,N,D,N>{S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,U,N,D,N>{S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,U,N,D,N>{S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,U,N,D,N>{~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,U,N,D,N>{S()=default;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,U,N,D,N>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,U,N,D,N>{S();~S()=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,U,N,D,N>{~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,U,N,D,N>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,U,N,D,N>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,U,N,D,N>{S();~S()=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,U,N,D,N>{~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,U,N,D,N>{S()=default;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,U,N,D,N>{S()=delete;~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,U,N,D,N>{S();~S();S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,F,N,D,N>{S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,F,N,D,N>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,F,N,D,N>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,F,N,D,N>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,F,N,D,N>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,F,N,D,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,F,N,D,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,F,N,D,N>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,F,N,D,N>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,F,N,D,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,F,N,D,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,F,N,D,N>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,F,N,D,N>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,F,N,D,N>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,F,N,D,N>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,F,N,D,N>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,D,N,D,N>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,D,N,D,N>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,D,N,D,N>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,D,N,D,N>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,D,N,D,N>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,D,N,D,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,D,N,D,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,D,N,D,N>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,D,N,D,N>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,D,N,D,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,D,N,D,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,D,N,D,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,D,N,D,N>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,D,N,D,N>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,D,N,D,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,D,N,D,N>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,N,N,D,N>{S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,U,N,N,D,N>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,U,N,N,D,N>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,U,N,N,D,N>{S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,F,N,N,D,N>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,F,N,N,D,N>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,F,N,N,D,N>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,F,N,N,D,N>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,D,N,N,D,N>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,D,N,N,D,N>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,D,N,N,D,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,D,N,N,D,N>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,N,N,N,D,N>{~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<F,N,N,N,D,N>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<D,N,N,N,D,N>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<N,N,N,N,D,N>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)& =delete;S&operator=(S&&)&;};
template<>struct S<U,U,U,U,N,N>{S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,U,U,N,N>{S()=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,U,U,N,N>{S()=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,U,U,N,N>{S();S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,U,U,N,N>{~S()=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,U,U,N,N>{S()=default;~S()=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,U,U,N,N>{S()=delete;~S()=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,U,U,N,N>{S();~S()=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,U,U,N,N>{~S()=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,U,U,N,N>{S()=default;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,U,U,N,N>{S()=delete;~S()=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,U,U,N,N>{S();~S()=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,U,U,N,N>{~S();S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,U,U,N,N>{S()=default;~S();S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,U,U,N,N>{S()=delete;~S();S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,U,U,N,N>{S();~S();S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,F,U,N,N>{S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,F,U,N,N>{S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,F,U,N,N>{S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,F,U,N,N>{S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,F,U,N,N>{~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,F,U,N,N>{S()=default;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,F,U,N,N>{S()=delete;~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,F,U,N,N>{S();~S()=default;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,F,U,N,N>{~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,F,U,N,N>{S()=default;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,F,U,N,N>{S()=delete;~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,F,U,N,N>{S();~S()=delete;S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,F,U,N,N>{~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,F,U,N,N>{S()=default;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,F,U,N,N>{S()=delete;~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,F,U,N,N>{S();~S();S(CR<S>)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,D,U,N,N>{S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,D,U,N,N>{S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,D,U,N,N>{S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,D,U,N,N>{S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,D,U,N,N>{~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,D,U,N,N>{S()=default;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,D,U,N,N>{S()=delete;~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,D,U,N,N>{S();~S()=default;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,D,U,N,N>{~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,D,U,N,N>{S()=default;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,D,U,N,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,D,U,N,N>{S();~S()=delete;S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,D,U,N,N>{~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,D,U,N,N>{S()=default;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,D,U,N,N>{S()=delete;~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,D,U,N,N>{S();~S();S(CR<S>)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,N,U,N,N>{S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,N,U,N,N>{S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,N,U,N,N>{S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,N,U,N,N>{S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,N,U,N,N>{~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,N,U,N,N>{S()=default;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,N,U,N,N>{S()=delete;~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,N,U,N,N>{S();~S()=default;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,N,U,N,N>{~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,N,U,N,N>{S()=default;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,N,U,N,N>{S()=delete;~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,N,U,N,N>{S();~S()=delete;S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,N,U,N,N>{~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,N,U,N,N>{S()=default;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,N,U,N,N>{S()=delete;~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,N,U,N,N>{S();~S();S(CR<S>);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,U,F,N,N>{S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,U,F,N,N>{S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,U,F,N,N>{S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,U,F,N,N>{S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,U,F,N,N>{~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,U,F,N,N>{S()=default;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,U,F,N,N>{S()=delete;~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,U,F,N,N>{S();~S()=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,U,F,N,N>{~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,U,F,N,N>{S()=default;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,U,F,N,N>{S()=delete;~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,U,F,N,N>{S();~S()=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,U,F,N,N>{~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,U,F,N,N>{S()=default;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,U,F,N,N>{S()=delete;~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,U,F,N,N>{S();~S();S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,F,F,N,N>{S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,F,F,N,N>{S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,F,F,N,N>{S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,F,F,N,N>{S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,F,F,N,N>{~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,F,F,N,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,F,F,N,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,F,F,N,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,F,F,N,N>{~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,F,F,N,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,F,F,N,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,F,F,N,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,F,F,N,N>{~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,F,F,N,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,F,F,N,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,F,F,N,N>{S();~S();S(CR<S>)=default;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,D,F,N,N>{S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,D,F,N,N>{S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,D,F,N,N>{S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,D,F,N,N>{S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,D,F,N,N>{~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,D,F,N,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,D,F,N,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,D,F,N,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,D,F,N,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,D,F,N,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,D,F,N,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,D,F,N,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,D,F,N,N>{~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,D,F,N,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,D,F,N,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,D,F,N,N>{S();~S();S(CR<S>)=delete;S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,N,F,N,N>{S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,N,F,N,N>{S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,N,F,N,N>{S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,N,F,N,N>{S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,N,F,N,N>{~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,N,F,N,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,N,F,N,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,N,F,N,N>{S();~S()=default;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,N,F,N,N>{~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,N,F,N,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,N,F,N,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,N,F,N,N>{S();~S()=delete;S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,N,F,N,N>{~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,N,F,N,N>{S()=default;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,N,F,N,N>{S()=delete;~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,N,F,N,N>{S();~S();S(CR<S>);S(S&&)=default;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,U,D,N,N>{S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,U,D,N,N>{S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,U,D,N,N>{S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,U,D,N,N>{S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,U,D,N,N>{~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,U,D,N,N>{S()=default;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,U,D,N,N>{S()=delete;~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,U,D,N,N>{S();~S()=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,U,D,N,N>{~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,U,D,N,N>{S()=default;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,U,D,N,N>{S()=delete;~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,U,D,N,N>{S();~S()=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,U,D,N,N>{~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,U,D,N,N>{S()=default;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,U,D,N,N>{S()=delete;~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,U,D,N,N>{S();~S();S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,F,D,N,N>{S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,F,D,N,N>{S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,F,D,N,N>{S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,F,D,N,N>{S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,F,D,N,N>{~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,F,D,N,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,F,D,N,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,F,D,N,N>{S();~S()=default;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,F,D,N,N>{~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,F,D,N,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,F,D,N,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,F,D,N,N>{S();~S()=delete;S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,F,D,N,N>{~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,F,D,N,N>{S()=default;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,F,D,N,N>{S()=delete;~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,F,D,N,N>{S();~S();S(CR<S>)=default;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,D,D,N,N>{S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,D,D,N,N>{S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,D,D,N,N>{S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,D,D,N,N>{S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,D,D,N,N>{~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,D,D,N,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,D,D,N,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,D,D,N,N>{S();~S()=default;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,D,D,N,N>{~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,D,D,N,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,D,D,N,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,D,D,N,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,D,D,N,N>{~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,D,D,N,N>{S()=default;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,D,D,N,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,D,D,N,N>{S();~S();S(CR<S>)=delete;S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,N,D,N,N>{S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,N,D,N,N>{S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,N,D,N,N>{S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,N,D,N,N>{S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,N,D,N,N>{~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,N,D,N,N>{S()=default;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,N,D,N,N>{S()=delete;~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,N,D,N,N>{S();~S()=default;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,N,D,N,N>{~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,N,D,N,N>{S()=default;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,N,D,N,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,N,D,N,N>{S();~S()=delete;S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,N,D,N,N>{~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,N,D,N,N>{S()=default;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,N,D,N,N>{S()=delete;~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,N,D,N,N>{S();~S();S(CR<S>);S(S&&)=delete;S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,U,N,N,N>{S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,U,N,N,N>{S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,U,N,N,N>{S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,U,N,N,N>{S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,U,N,N,N>{~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,U,N,N,N>{S()=default;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,U,N,N,N>{S()=delete;~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,U,N,N,N>{S();~S()=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,U,N,N,N>{~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,U,N,N,N>{S()=default;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,U,N,N,N>{S()=delete;~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,U,N,N,N>{S();~S()=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,U,N,N,N>{~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,U,N,N,N>{S()=default;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,U,N,N,N>{S()=delete;~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,U,N,N,N>{S();~S();S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,F,N,N,N>{S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,F,N,N,N>{S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,F,N,N,N>{S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,F,N,N,N>{S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,F,N,N,N>{~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,F,N,N,N>{S()=default;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,F,N,N,N>{S()=delete;~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,F,N,N,N>{S();~S()=default;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,F,N,N,N>{~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,F,N,N,N>{S()=default;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,F,N,N,N>{S()=delete;~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,F,N,N,N>{S();~S()=delete;S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,F,N,N,N>{~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,F,N,N,N>{S()=default;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,F,N,N,N>{S()=delete;~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,F,N,N,N>{S();~S();S(CR<S>)=default;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,D,N,N,N>{S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,D,N,N,N>{S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,D,N,N,N>{S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,D,N,N,N>{S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,D,N,N,N>{~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,D,N,N,N>{S()=default;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,D,N,N,N>{S()=delete;~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,D,N,N,N>{S();~S()=default;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,D,N,N,N>{~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,D,N,N,N>{S()=default;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,D,N,N,N>{S()=delete;~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,D,N,N,N>{S();~S()=delete;S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,D,N,N,N>{~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,D,N,N,N>{S()=default;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,D,N,N,N>{S()=delete;~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,D,N,N,N>{S();~S();S(CR<S>)=delete;S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,U,N,N,N,N>{S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,U,N,N,N,N>{S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,U,N,N,N,N>{S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,U,N,N,N,N>{S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,F,N,N,N,N>{~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,F,N,N,N,N>{S()=default;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,F,N,N,N,N>{S()=delete;~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,F,N,N,N,N>{S();~S()=default;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,D,N,N,N,N>{~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,D,N,N,N,N>{S()=default;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,D,N,N,N,N>{S()=delete;~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,D,N,N,N,N>{S();~S()=delete;S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<U,N,N,N,N,N>{~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<F,N,N,N,N,N>{S()=default;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<D,N,N,N,N,N>{S()=delete;~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};
template<>struct S<N,N,N,N,N,N>{S();~S();S(CR<S>);S(S&&);S&operator=(const S&)&;S&operator=(S&&)&;};